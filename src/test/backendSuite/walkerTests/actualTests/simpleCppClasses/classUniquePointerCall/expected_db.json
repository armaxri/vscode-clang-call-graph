{
  "databaseVersion": 1,
  "cppFiles": [
    {
      "name": "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
      "lastAnalyzed": 1725057898791,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": []
    }
  ],
  "hppFiles": [
    {
      "name": "/clang++/usr/lib/clang/15.0.0/include/stddef.h",
      "lastAnalyzed": 1725057898791,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/stddef.h"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/stddef.h",
      "lastAnalyzed": 1722468181729,
      "classes": [
        {
          "name": "is_array",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_lvalue_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_rvalue_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "remove_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_IfImpl",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "conditional",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "add_const",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_same",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "add_lvalue_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_copy_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "add_rvalue_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_move_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "align",
          "funcAstName": "__ZNSt3__15alignEmmRPvRm",
          "qualType": "void *(size_t, size_t, void *&, size_t &)",
          "range": {
            "start": {
              "line": 21,
              "column": 33
            },
            "end": {
              "line": 21,
              "column": 38
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIPvEEOT_i",
          "qualType": "void *&&(int)",
          "range": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 16
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIlEEOT_i",
          "qualType": "long &&(int)",
          "range": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 16
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIiEEOT_i",
          "qualType": "int &&(int)",
          "range": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 16
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIeEEOT_i",
          "qualType": "long double &&(int)",
          "range": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 16
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIxEEOT_i",
          "qualType": "long long &&(int)",
          "range": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 16
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIbEEOT_i",
          "qualType": "bool &&(int)",
          "range": {
            "start": {
              "line": 24,
              "column": 7
            },
            "end": {
              "line": 24,
              "column": 16
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIPvEET_l",
          "qualType": "void *(long)",
          "range": {
            "start": {
              "line": 26,
              "column": 5
            },
            "end": {
              "line": 26,
              "column": 14
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIlEET_l",
          "qualType": "long (long)",
          "range": {
            "start": {
              "line": 26,
              "column": 5
            },
            "end": {
              "line": 26,
              "column": 14
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIiEET_l",
          "qualType": "int (long)",
          "range": {
            "start": {
              "line": 26,
              "column": 5
            },
            "end": {
              "line": 26,
              "column": 14
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIeEET_l",
          "qualType": "long double (long)",
          "range": {
            "start": {
              "line": 26,
              "column": 5
            },
            "end": {
              "line": 26,
              "column": 14
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIxEET_l",
          "qualType": "long long (long)",
          "range": {
            "start": {
              "line": 26,
              "column": 5
            },
            "end": {
              "line": 26,
              "column": 14
            }
          }
        },
        {
          "funcName": "__declval",
          "funcAstName": "__ZNSt3__19__declvalIbEET_l",
          "qualType": "bool (long)",
          "range": {
            "start": {
              "line": 26,
              "column": 5
            },
            "end": {
              "line": 26,
              "column": 14
            }
          }
        },
        {
          "funcName": "declval",
          "funcAstName": "__ZNSt3__17declvalIPvEEDTclsr3stdE9__declvalIT_ELi0EEEv",
          "qualType": "decltype(std::__declval<void *>(0)) () noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 34
            },
            "end": {
              "line": 30,
              "column": 41
            }
          }
        },
        {
          "funcName": "declval",
          "funcAstName": "__ZNSt3__17declvalIlEEDTclsr3stdE9__declvalIT_ELi0EEEv",
          "qualType": "decltype(std::__declval<long>(0)) () noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 34
            },
            "end": {
              "line": 30,
              "column": 41
            }
          }
        },
        {
          "funcName": "declval",
          "funcAstName": "__ZNSt3__17declvalIiEEDTclsr3stdE9__declvalIT_ELi0EEEv",
          "qualType": "decltype(std::__declval<int>(0)) () noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 34
            },
            "end": {
              "line": 30,
              "column": 41
            }
          }
        },
        {
          "funcName": "declval",
          "funcAstName": "__ZNSt3__17declvalIeEEDTclsr3stdE9__declvalIT_ELi0EEEv",
          "qualType": "decltype(std::__declval<long double>(0)) () noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 34
            },
            "end": {
              "line": 30,
              "column": 41
            }
          }
        },
        {
          "funcName": "declval",
          "funcAstName": "__ZNSt3__17declvalIxEEDTclsr3stdE9__declvalIT_ELi0EEEv",
          "qualType": "decltype(std::__declval<long long>(0)) () noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 34
            },
            "end": {
              "line": 30,
              "column": 41
            }
          }
        },
        {
          "funcName": "declval",
          "funcAstName": "__ZNSt3__17declvalIbEEDTclsr3stdE9__declvalIT_ELi0EEEv",
          "qualType": "decltype(std::__declval<bool>(0)) () noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 34
            },
            "end": {
              "line": 30,
              "column": 41
            }
          }
        },
        {
          "funcName": "forward",
          "funcAstName": "__ZNSt3__17forwardB8ue170006IbEEOT_Ru20__remove_reference_tIS1_E",
          "qualType": "bool &&(__libcpp_remove_reference_t<bool> &) noexcept",
          "range": {
            "start": {
              "line": 25,
              "column": 1
            },
            "end": {
              "line": 25,
              "column": 8
            }
          }
        },
        {
          "funcName": "forward",
          "funcAstName": "__ZNSt3__17forwardB8ue170006ImEEOT_Ru20__remove_reference_tIS1_E",
          "qualType": "unsigned long &&(__libcpp_remove_reference_t<unsigned long> &) noexcept",
          "range": {
            "start": {
              "line": 25,
              "column": 1
            },
            "end": {
              "line": 25,
              "column": 8
            }
          }
        },
        {
          "funcName": "forward",
          "funcAstName": "__ZNSt3__17forwardB8ue170006IRP9TestClassEEOT_Ru20__remove_reference_tIS4_E",
          "qualType": "TestClass *&(__libcpp_remove_reference_t<TestClass *&> &) noexcept",
          "range": {
            "start": {
              "line": 25,
              "column": 1
            },
            "end": {
              "line": 25,
              "column": 8
            }
          }
        },
        {
          "funcName": "forward",
          "funcAstName": "__ZNSt3__17forwardB8ue170006INS_16__value_init_tagEEEOT_Ru20__remove_reference_tIS2_E",
          "qualType": "std::__value_init_tag &&(__libcpp_remove_reference_t<__value_init_tag> &) noexcept",
          "range": {
            "start": {
              "line": 25,
              "column": 1
            },
            "end": {
              "line": 25,
              "column": 8
            }
          }
        },
        {
          "funcName": "move",
          "funcAstName": "__ZNSt3__14moveB8ue170006IRmEEOu20__remove_reference_tIT_EOS2_",
          "qualType": "__libcpp_remove_reference_t<unsigned long &> &&(unsigned long &) noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 1
            },
            "end": {
              "line": 30,
              "column": 5
            }
          }
        }
      ],
      "funcImpls": [
        {
          "funcName": "operator|",
          "funcAstName": "__ZStorB8ue170006St4byteS_",
          "qualType": "byte (byte, byte) noexcept",
          "range": {
            "start": {
              "line": 74,
              "column": 39
            },
            "end": {
              "line": 74,
              "column": 47
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator|=",
          "funcAstName": "__ZStoRB8ue170006RSt4byteS_",
          "qualType": "byte &(byte &, byte) noexcept",
          "range": {
            "start": {
              "line": 82,
              "column": 39
            },
            "end": {
              "line": 82,
              "column": 47
            }
          },
          "funcCalls": [
            {
              "funcName": "operator|",
              "funcAstName": "__ZStorB8ue170006St4byteS_",
              "qualType": "byte (byte, byte) noexcept",
              "range": {
                "start": {
                  "line": 82,
                  "column": -1
                },
                "end": {
                  "line": 82,
                  "column": -1
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator&",
          "funcAstName": "__ZStanB8ue170006St4byteS_",
          "qualType": "byte (byte, byte) noexcept",
          "range": {
            "start": {
              "line": 85,
              "column": 39
            },
            "end": {
              "line": 85,
              "column": 47
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator&=",
          "funcAstName": "__ZStaNB8ue170006RSt4byteS_",
          "qualType": "byte &(byte &, byte) noexcept",
          "range": {
            "start": {
              "line": 93,
              "column": 39
            },
            "end": {
              "line": 93,
              "column": 47
            }
          },
          "funcCalls": [
            {
              "funcName": "operator&",
              "funcAstName": "__ZStanB8ue170006St4byteS_",
              "qualType": "byte (byte, byte) noexcept",
              "range": {
                "start": {
                  "line": 93,
                  "column": -1
                },
                "end": {
                  "line": 93,
                  "column": -1
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator^",
          "funcAstName": "__ZSteoB8ue170006St4byteS_",
          "qualType": "byte (byte, byte) noexcept",
          "range": {
            "start": {
              "line": 96,
              "column": 39
            },
            "end": {
              "line": 96,
              "column": 47
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator^=",
          "funcAstName": "__ZSteOB8ue170006RSt4byteS_",
          "qualType": "byte &(byte &, byte) noexcept",
          "range": {
            "start": {
              "line": 104,
              "column": 39
            },
            "end": {
              "line": 104,
              "column": 47
            }
          },
          "funcCalls": [
            {
              "funcName": "operator^",
              "funcAstName": "__ZSteoB8ue170006St4byteS_",
              "qualType": "byte (byte, byte) noexcept",
              "range": {
                "start": {
                  "line": 104,
                  "column": -1
                },
                "end": {
                  "line": 104,
                  "column": -1
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator~",
          "funcAstName": "__ZStcoB8ue170006St4byte",
          "qualType": "byte (byte) noexcept",
          "range": {
            "start": {
              "line": 107,
              "column": 39
            },
            "end": {
              "line": 107,
              "column": 47
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/cstddef"
      ]
    },
    {
      "name": "/clang++/usr/lib/clang/15.0.0/include/__stddef_max_align_t.h",
      "lastAnalyzed": 1722468181728,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/lib/clang/15.0.0/include/stddef.h"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/cstddef",
      "lastAnalyzed": 1722468181728,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/c++/v1/__exception/exception.h",
      "lastAnalyzed": 1722468181729,
      "classes": [
        {
          "name": "exception",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt9exceptionaSERKS_",
              "qualType": "std::exception &(const std::exception &)",
              "range": {
                "start": {
                  "line": 72,
                  "column": 33
                },
                "end": {
                  "line": 72,
                  "column": 42
                }
              }
            }
          ],
          "funcImpls": [],
          "virtualFuncDecls": [
            {
              "funcName": "what",
              "funcAstName": "__ZNKSt9exception4whatEv",
              "qualType": "const char *() const noexcept",
              "range": {
                "start": {
                  "line": 78,
                  "column": 23
                },
                "end": {
                  "line": 78,
                  "column": 27
                }
              },
              "baseFuncAstName": "__ZNKSt9exception4whatEv"
            }
          ],
          "virtualFuncImpls": []
        },
        {
          "name": "bad_exception",
          "parentClasses": [
            "exception"
          ],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt13bad_exceptionaSERKS_",
              "qualType": "std::bad_exception &(const std::bad_exception &)",
              "range": {
                "start": {
                  "line": 81,
                  "column": 33
                },
                "end": {
                  "line": 81,
                  "column": 46
                }
              }
            }
          ],
          "funcImpls": [],
          "virtualFuncDecls": [
            {
              "funcName": "what",
              "funcAstName": "__ZNKSt13bad_exception4whatEv",
              "qualType": "const char *() const noexcept",
              "range": {
                "start": {
                  "line": 85,
                  "column": 15
                },
                "end": {
                  "line": 85,
                  "column": 19
                }
              },
              "baseFuncAstName": "__ZNKSt9exception4whatEv"
            }
          ],
          "virtualFuncImpls": []
        },
        {
          "name": "alignment_of",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_const",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_function",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/new"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/new",
      "lastAnalyzed": 1722468181732,
      "classes": [
        {
          "name": "nothrow_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "bad_alloc",
          "parentClasses": [
            "exception"
          ],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt9bad_allocaSERKS_",
              "qualType": "std::bad_alloc &(const std::bad_alloc &)",
              "range": {
                "start": {
                  "line": 131,
                  "column": 33
                },
                "end": {
                  "line": 131,
                  "column": 42
                }
              }
            }
          ],
          "funcImpls": [],
          "virtualFuncDecls": [
            {
              "funcName": "what",
              "funcAstName": "__ZNKSt9bad_alloc4whatEv",
              "qualType": "const char *() const noexcept",
              "range": {
                "start": {
                  "line": 137,
                  "column": 17
                },
                "end": {
                  "line": 137,
                  "column": 21
                }
              },
              "baseFuncAstName": "__ZNKSt9exception4whatEv"
            }
          ],
          "virtualFuncImpls": []
        },
        {
          "name": "bad_array_new_length",
          "parentClasses": [
            "bad_alloc"
          ],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt20bad_array_new_lengthaSERKS_",
              "qualType": "std::bad_array_new_length &(const std::bad_array_new_length &)",
              "range": {
                "start": {
                  "line": 140,
                  "column": 33
                },
                "end": {
                  "line": 140,
                  "column": 53
                }
              }
            }
          ],
          "funcImpls": [],
          "virtualFuncDecls": [
            {
              "funcName": "what",
              "funcAstName": "__ZNKSt20bad_array_new_length4whatEv",
              "qualType": "const char *() const noexcept",
              "range": {
                "start": {
                  "line": 146,
                  "column": 17
                },
                "end": {
                  "line": 146,
                  "column": 21
                }
              },
              "baseFuncAstName": "__ZNKSt9exception4whatEv"
            }
          ],
          "virtualFuncImpls": []
        },
        {
          "name": "destroying_delete_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "set_new_handler",
          "funcAstName": "__ZSt15set_new_handlerPFvvE",
          "qualType": "new_handler (new_handler) noexcept",
          "range": {
            "start": {
              "line": 150,
              "column": 39
            },
            "end": {
              "line": 150,
              "column": 54
            }
          }
        },
        {
          "funcName": "get_new_handler",
          "funcAstName": "__ZSt15get_new_handlerv",
          "qualType": "new_handler () noexcept",
          "range": {
            "start": {
              "line": 151,
              "column": 39
            },
            "end": {
              "line": 151,
              "column": 54
            }
          }
        },
        {
          "funcName": "__throw_bad_alloc",
          "funcAstName": "__ZSt17__throw_bad_allocv",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 173,
              "column": 49
            },
            "end": {
              "line": 173,
              "column": 66
            }
          }
        },
        {
          "funcName": "operator new",
          "funcAstName": "__Znwm",
          "qualType": "void *(unsigned long)",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator new",
          "funcAstName": "__ZnwmSt11align_val_t",
          "qualType": "void *(unsigned long, std::align_val_t)",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__Znam",
          "qualType": "void *(unsigned long)",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__ZnamSt11align_val_t",
          "qualType": "void *(unsigned long, std::align_val_t)",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPv",
          "qualType": "void (void *) noexcept",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPvSt11align_val_t",
          "qualType": "void (void *, std::align_val_t) noexcept",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPv",
          "qualType": "void (void *) noexcept",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPvSt11align_val_t",
          "qualType": "void (void *, std::align_val_t) noexcept",
          "range": {
            "start": {
              "line": 201,
              "column": -1
            },
            "end": {
              "line": 201,
              "column": -1
            }
          }
        },
        {
          "funcName": "operator new",
          "funcAstName": "__Znwm",
          "qualType": "void *(std::size_t)",
          "range": {
            "start": {
              "line": 243,
              "column": 66
            },
            "end": {
              "line": 243,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator new",
          "funcAstName": "__ZnwmRKSt9nothrow_t",
          "qualType": "void *(std::size_t, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 244,
              "column": 66
            },
            "end": {
              "line": 244,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPv",
          "qualType": "void (void *) noexcept",
          "range": {
            "start": {
              "line": 245,
              "column": 36
            },
            "end": {
              "line": 245,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPvRKSt9nothrow_t",
          "qualType": "void (void *, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 246,
              "column": 36
            },
            "end": {
              "line": 246,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPvm",
          "qualType": "void (void *, std::size_t) noexcept",
          "range": {
            "start": {
              "line": 248,
              "column": 74
            },
            "end": {
              "line": 248,
              "column": 82
            }
          }
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__Znam",
          "qualType": "void *(std::size_t)",
          "range": {
            "start": {
              "line": 251,
              "column": 66
            },
            "end": {
              "line": 251,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__ZnamRKSt9nothrow_t",
          "qualType": "void *(std::size_t, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 252,
              "column": 66
            },
            "end": {
              "line": 252,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPv",
          "qualType": "void (void *) noexcept",
          "range": {
            "start": {
              "line": 253,
              "column": 36
            },
            "end": {
              "line": 253,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPvRKSt9nothrow_t",
          "qualType": "void (void *, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 254,
              "column": 36
            },
            "end": {
              "line": 254,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPvm",
          "qualType": "void (void *, std::size_t) noexcept",
          "range": {
            "start": {
              "line": 256,
              "column": 74
            },
            "end": {
              "line": 256,
              "column": 82
            }
          }
        },
        {
          "funcName": "operator new",
          "funcAstName": "__ZnwmSt11align_val_t",
          "qualType": "void *(std::size_t, std::align_val_t)",
          "range": {
            "start": {
              "line": 260,
              "column": 66
            },
            "end": {
              "line": 260,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator new",
          "funcAstName": "__ZnwmSt11align_val_tRKSt9nothrow_t",
          "qualType": "void *(std::size_t, std::align_val_t, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 261,
              "column": 66
            },
            "end": {
              "line": 261,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPvSt11align_val_t",
          "qualType": "void (void *, std::align_val_t) noexcept",
          "range": {
            "start": {
              "line": 262,
              "column": 36
            },
            "end": {
              "line": 262,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPvSt11align_val_tRKSt9nothrow_t",
          "qualType": "void (void *, std::align_val_t, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 263,
              "column": 36
            },
            "end": {
              "line": 263,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlPvmSt11align_val_t",
          "qualType": "void (void *, std::size_t, std::align_val_t) noexcept",
          "range": {
            "start": {
              "line": 265,
              "column": 74
            },
            "end": {
              "line": 265,
              "column": 82
            }
          }
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__ZnamSt11align_val_t",
          "qualType": "void *(std::size_t, std::align_val_t)",
          "range": {
            "start": {
              "line": 268,
              "column": 66
            },
            "end": {
              "line": 268,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__ZnamSt11align_val_tRKSt9nothrow_t",
          "qualType": "void *(std::size_t, std::align_val_t, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 269,
              "column": 66
            },
            "end": {
              "line": 269,
              "column": 74
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPvSt11align_val_t",
          "qualType": "void (void *, std::align_val_t) noexcept",
          "range": {
            "start": {
              "line": 270,
              "column": 36
            },
            "end": {
              "line": 270,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPvSt11align_val_tRKSt9nothrow_t",
          "qualType": "void (void *, std::align_val_t, const std::nothrow_t &) noexcept",
          "range": {
            "start": {
              "line": 271,
              "column": 36
            },
            "end": {
              "line": 271,
              "column": 44
            }
          }
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaPvmSt11align_val_t",
          "qualType": "void (void *, std::size_t, std::align_val_t) noexcept",
          "range": {
            "start": {
              "line": 273,
              "column": 74
            },
            "end": {
              "line": 273,
              "column": 82
            }
          }
        }
      ],
      "funcImpls": [
        {
          "funcName": "__throw_bad_array_new_length",
          "funcAstName": "__ZSt28__throw_bad_array_new_lengthB8ue170006v",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 176,
              "column": 34
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator new",
          "funcAstName": "__ZnwB8ue170006mPv",
          "qualType": "void *(std::size_t, void *) noexcept",
          "range": {
            "start": {
              "line": 277,
              "column": 70
            },
            "end": {
              "line": 277,
              "column": 78
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator new[]",
          "funcAstName": "__ZnaB8ue170006mPv",
          "qualType": "void *(std::size_t, void *) noexcept",
          "range": {
            "start": {
              "line": 278,
              "column": 70
            },
            "end": {
              "line": 278,
              "column": 78
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator delete",
          "funcAstName": "__ZdlB8ue170006PvS_",
          "qualType": "void (void *, void *) noexcept",
          "range": {
            "start": {
              "line": 279,
              "column": 40
            },
            "end": {
              "line": 279,
              "column": 48
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "operator delete[]",
          "funcAstName": "__ZdaB8ue170006PvS_",
          "qualType": "void (void *, void *) noexcept",
          "range": {
            "start": {
              "line": 280,
              "column": 40
            },
            "end": {
              "line": 280,
              "column": 48
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__is_overaligned_for_new",
          "funcAstName": "__ZNSt3__124__is_overaligned_for_newB8ue170006Em",
          "qualType": "bool (size_t) noexcept",
          "range": {
            "start": {
              "line": 286,
              "column": 57
            },
            "end": {
              "line": 286,
              "column": 81
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_operator_new",
          "funcAstName": "__ZNSt3__121__libcpp_operator_newB8ue170006IJmSt11align_val_tEEEPvDpT_",
          "qualType": "void *(unsigned long, std::align_val_t)",
          "range": {
            "start": {
              "line": 296,
              "column": 7
            },
            "end": {
              "line": 296,
              "column": 28
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_operator_new",
          "funcAstName": "__ZNSt3__121__libcpp_operator_newB8ue170006IJmEEEPvDpT_",
          "qualType": "void *(unsigned long)",
          "range": {
            "start": {
              "line": 296,
              "column": 7
            },
            "end": {
              "line": 296,
              "column": 28
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_operator_delete",
          "funcAstName": "__ZNSt3__124__libcpp_operator_deleteB8ue170006IJPvSt11align_val_tEEEvDpT_",
          "qualType": "void (void *, std::align_val_t)",
          "range": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 30
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_operator_delete",
          "funcAstName": "__ZNSt3__124__libcpp_operator_deleteB8ue170006IJPvEEEvDpT_",
          "qualType": "void (void *)",
          "range": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 306,
              "column": 30
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_allocate",
          "funcAstName": "__ZNSt3__117__libcpp_allocateB8ue170006Emm",
          "qualType": "void *(size_t, size_t)",
          "range": {
            "start": {
              "line": 315,
              "column": 7
            },
            "end": {
              "line": 315,
              "column": 24
            }
          },
          "funcCalls": [
            {
              "funcName": "__is_overaligned_for_new",
              "funcAstName": "__ZNSt3__124__is_overaligned_for_newB8ue170006Em",
              "qualType": "bool (size_t) noexcept",
              "range": {
                "start": {
                  "line": 317,
                  "column": 7
                },
                "end": {
                  "line": 317,
                  "column": 40
                }
              }
            },
            {
              "funcName": "__libcpp_operator_new",
              "funcAstName": "__ZNSt3__121__libcpp_operator_newB8ue170006IJmSt11align_val_tEEEPvDpT_",
              "qualType": "void *(unsigned long, std::align_val_t)",
              "range": {
                "start": {
                  "line": 319,
                  "column": 12
                },
                "end": {
                  "line": 319,
                  "column": 54
                }
              }
            },
            {
              "funcName": "__libcpp_operator_new",
              "funcAstName": "__ZNSt3__121__libcpp_operator_newB8ue170006IJmEEEPvDpT_",
              "qualType": "void *(unsigned long)",
              "range": {
                "start": {
                  "line": 324,
                  "column": 10
                },
                "end": {
                  "line": 324,
                  "column": 39
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__do_deallocate_handle_size",
          "funcAstName": "__ZNSt3__127__do_deallocate_handle_sizeB8ue170006IJSt11align_val_tEEEvPvmDpT_",
          "qualType": "void (void *, size_t, std::align_val_t)",
          "range": {
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 33
            }
          },
          "funcCalls": [
            {
              "funcName": "__libcpp_operator_delete",
              "funcAstName": "__ZNSt3__124__libcpp_operator_deleteB8ue170006IJPvSt11align_val_tEEEvDpT_",
              "qualType": "void (void *, std::align_val_t)",
              "range": {
                "start": {
                  "line": 332,
                  "column": 10
                },
                "end": {
                  "line": 332,
                  "column": 57
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__do_deallocate_handle_size",
          "funcAstName": "__ZNSt3__127__do_deallocate_handle_sizeB8ue170006IJEEEvPvmDpT_",
          "qualType": "void (void *, size_t)",
          "range": {
            "start": {
              "line": 329,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 33
            }
          },
          "funcCalls": [
            {
              "funcName": "__libcpp_operator_delete",
              "funcAstName": "__ZNSt3__124__libcpp_operator_deleteB8ue170006IJPvEEEvDpT_",
              "qualType": "void (void *)",
              "range": {
                "start": {
                  "line": 332,
                  "column": 10
                },
                "end": {
                  "line": 332,
                  "column": 57
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_deallocate",
          "funcAstName": "__ZNSt3__119__libcpp_deallocateB8ue170006EPvmm",
          "qualType": "void (void *, size_t, size_t)",
          "range": {
            "start": {
              "line": 339,
              "column": 6
            },
            "end": {
              "line": 339,
              "column": 25
            }
          },
          "funcCalls": [
            {
              "funcName": "__is_overaligned_for_new",
              "funcAstName": "__ZNSt3__124__is_overaligned_for_newB8ue170006Em",
              "qualType": "bool (size_t) noexcept",
              "range": {
                "start": {
                  "line": 344,
                  "column": 9
                },
                "end": {
                  "line": 344,
                  "column": 42
                }
              }
            },
            {
              "funcName": "__do_deallocate_handle_size",
              "funcAstName": "__ZNSt3__127__do_deallocate_handle_sizeB8ue170006IJSt11align_val_tEEEvPvmDpT_",
              "qualType": "void (void *, size_t, std::align_val_t)",
              "range": {
                "start": {
                  "line": 346,
                  "column": 14
                },
                "end": {
                  "line": 346,
                  "column": 69
                }
              }
            },
            {
              "funcName": "__do_deallocate_handle_size",
              "funcAstName": "__ZNSt3__127__do_deallocate_handle_sizeB8ue170006IJEEEvPvmDpT_",
              "qualType": "void (void *, size_t)",
              "range": {
                "start": {
                  "line": 348,
                  "column": 14
                },
                "end": {
                  "line": 348,
                  "column": 56
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_deallocate_unsized",
          "funcAstName": "__ZNSt3__127__libcpp_deallocate_unsizedB8ue170006EPvm",
          "qualType": "void (void *, size_t)",
          "range": {
            "start": {
              "line": 353,
              "column": 39
            },
            "end": {
              "line": 353,
              "column": 66
            }
          },
          "funcCalls": [
            {
              "funcName": "__is_overaligned_for_new",
              "funcAstName": "__ZNSt3__124__is_overaligned_for_newB8ue170006Em",
              "qualType": "bool (size_t) noexcept",
              "range": {
                "start": {
                  "line": 358,
                  "column": 9
                },
                "end": {
                  "line": 358,
                  "column": 42
                }
              }
            },
            {
              "funcName": "__libcpp_operator_delete",
              "funcAstName": "__ZNSt3__124__libcpp_operator_deleteB8ue170006IJPvSt11align_val_tEEEvDpT_",
              "qualType": "void (void *, std::align_val_t)",
              "range": {
                "start": {
                  "line": 360,
                  "column": 14
                },
                "end": {
                  "line": 360,
                  "column": 58
                }
              }
            },
            {
              "funcName": "__libcpp_operator_delete",
              "funcAstName": "__ZNSt3__124__libcpp_operator_deleteB8ue170006IJPvEEEvDpT_",
              "qualType": "void (void *)",
              "range": {
                "start": {
                  "line": 362,
                  "column": 14
                },
                "end": {
                  "line": 362,
                  "column": 45
                }
              }
            }
          ],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/__memory/construct_at.h"
      ]
    },
    {
      "name": "/clang++/usr/include/arm/_types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/machine/_types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/machine/_types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/sys/_types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/_types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/_types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_pthread/_pthread_types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [
        {
          "name": "_opaque_pthread_attr_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_cond_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_condattr_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_mutex_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_mutexattr_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_once_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_rwlock_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_rwlockattr_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_opaque_pthread_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/_types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/stdlib.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/wait.h",
      "lastAnalyzed": 1722468181730,
      "classes": [
        {
          "name": "wait",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "wait",
          "funcAstName": "_wait",
          "qualType": "pid_t (int *)",
          "range": {
            "start": {
              "line": 248,
              "column": 9
            },
            "end": {
              "line": 248,
              "column": 13
            }
          }
        },
        {
          "funcName": "waitpid",
          "funcAstName": "_waitpid",
          "qualType": "pid_t (pid_t, int *, int)",
          "range": {
            "start": {
              "line": 249,
              "column": 9
            },
            "end": {
              "line": 249,
              "column": 16
            }
          }
        },
        {
          "funcName": "waitid",
          "funcAstName": "_waitid",
          "qualType": "int (idtype_t, id_t, siginfo_t *, int)",
          "range": {
            "start": {
              "line": 251,
              "column": 9
            },
            "end": {
              "line": 251,
              "column": 15
            }
          }
        },
        {
          "funcName": "wait3",
          "funcAstName": "_wait3",
          "qualType": "pid_t (int *, int, struct rusage *)",
          "range": {
            "start": {
              "line": 254,
              "column": 9
            },
            "end": {
              "line": 254,
              "column": 14
            }
          }
        },
        {
          "funcName": "wait4",
          "funcAstName": "_wait4",
          "qualType": "pid_t (pid_t, int *, int, struct rusage *)",
          "range": {
            "start": {
              "line": 255,
              "column": 9
            },
            "end": {
              "line": 255,
              "column": 14
            }
          }
        },
        {
          "funcName": "alloca",
          "funcAstName": "_alloca",
          "qualType": "void *(size_t)",
          "range": {
            "start": {
              "line": 32,
              "column": 7
            },
            "end": {
              "line": 32,
              "column": 13
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_pid_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/wait.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_id_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/wait.h"
      ]
    },
    {
      "name": "/clang++/usr/include/arm/signal.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/machine/signal.h"
      ]
    },
    {
      "name": "/clang++/usr/include/machine/signal.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/sys/_types/_int8_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/arm/types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/machine/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_int16_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_int32_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_int64_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_u_int8_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_u_int16_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_u_int32_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_u_int64_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/machine/types.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/sys/_types/_intptr_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_uintptr_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/arm/types.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_pthread/_pthread_attr_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/signal.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/signal.h",
      "lastAnalyzed": 1722468181729,
      "classes": [
        {
          "name": "sigval",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "sigevent",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "sigaction",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "sigvec",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "sigstack",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "signal",
          "funcAstName": "_signal",
          "qualType": "void (*(int, void (*)(int)))(int)",
          "range": {
            "start": {
              "line": 390,
              "column": 7
            },
            "end": {
              "line": 390,
              "column": 13
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/wait.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_sigset_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/signal.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_uid_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/signal.h"
      ]
    },
    {
      "name": "/clang++/usr/include/_types/_uint8_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/include/stdint.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/lib/clang/15.0.0/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/include/_types/_uint16_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/include/_types/_uint32_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/include/_types/_uint64_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/lib/clang/15.0.0/include/stdint.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/_types/_intmax_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/include/_types/_uintmax_t.h",
      "lastAnalyzed": 1722468181729,
      "classes": [
        {
          "name": "timeval",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdint.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/resource.h",
      "lastAnalyzed": 1722468181730,
      "classes": [
        {
          "name": "rusage",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v0",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v1",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v2",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v3",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v4",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v5",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rusage_info_v6",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rlimit",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "proc_rlimit_control_wakeupmon",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "getpriority",
          "funcAstName": "_getpriority",
          "qualType": "int (int, id_t)",
          "range": {
            "start": {
              "line": 568,
              "column": 9
            },
            "end": {
              "line": 568,
              "column": 20
            }
          }
        },
        {
          "funcName": "getiopolicy_np",
          "funcAstName": "_getiopolicy_np",
          "qualType": "int (int, int)",
          "range": {
            "start": {
              "line": 570,
              "column": 9
            },
            "end": {
              "line": 570,
              "column": 23
            }
          }
        },
        {
          "funcName": "getrlimit",
          "funcAstName": "_getrlimit",
          "qualType": "int (int, struct rlimit *)",
          "range": {
            "start": {
              "line": 572,
              "column": 9
            },
            "end": {
              "line": 572,
              "column": 18
            }
          }
        },
        {
          "funcName": "getrusage",
          "funcAstName": "_getrusage",
          "qualType": "int (int, struct rusage *)",
          "range": {
            "start": {
              "line": 573,
              "column": 9
            },
            "end": {
              "line": 573,
              "column": 18
            }
          }
        },
        {
          "funcName": "setpriority",
          "funcAstName": "_setpriority",
          "qualType": "int (int, id_t, int)",
          "range": {
            "start": {
              "line": 574,
              "column": 9
            },
            "end": {
              "line": 574,
              "column": 20
            }
          }
        },
        {
          "funcName": "setiopolicy_np",
          "funcAstName": "_setiopolicy_np",
          "qualType": "int (int, int, int)",
          "range": {
            "start": {
              "line": 576,
              "column": 9
            },
            "end": {
              "line": 576,
              "column": 23
            }
          }
        },
        {
          "funcName": "setrlimit",
          "funcAstName": "_setrlimit",
          "qualType": "int (int, const struct rlimit *)",
          "range": {
            "start": {
              "line": 578,
              "column": 9
            },
            "end": {
              "line": 578,
              "column": 18
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/sys/wait.h"
      ]
    },
    {
      "name": "/clang++/usr/include/libkern/arm/OSByteOrder.h",
      "lastAnalyzed": 1722468181730,
      "classes": [
        {
          "name": "_OSUnalignedU16",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_OSUnalignedU32",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_OSUnalignedU64",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [
        {
          "funcName": "_OSSwapInt16",
          "funcAstName": "__ZL12_OSSwapInt16t",
          "qualType": "uint16_t (uint16_t)",
          "range": {
            "start": {
              "line": 15,
              "column": 1
            },
            "end": {
              "line": 15,
              "column": 13
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "_OSSwapInt32",
          "funcAstName": "__ZL12_OSSwapInt32j",
          "qualType": "uint32_t (uint32_t)",
          "range": {
            "start": {
              "line": 25,
              "column": 1
            },
            "end": {
              "line": 25,
              "column": 13
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "_OSSwapInt64",
          "funcAstName": "__ZL12_OSSwapInt64y",
          "qualType": "uint64_t (uint64_t)",
          "range": {
            "start": {
              "line": 41,
              "column": 1
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "OSReadSwapInt16",
          "funcAstName": "__ZL15OSReadSwapInt16PVKvm",
          "qualType": "uint16_t (const volatile void *, uintptr_t)",
          "range": {
            "start": {
              "line": 89,
              "column": 1
            },
            "end": {
              "line": 89,
              "column": 16
            }
          },
          "funcCalls": [
            {
              "funcName": "_OSSwapInt16",
              "funcAstName": "__ZL12_OSSwapInt16t",
              "qualType": "uint16_t (uint16_t)",
              "range": {
                "start": {
                  "line": 94,
                  "column": 9
                },
                "end": {
                  "line": 94,
                  "column": 86
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "OSReadSwapInt32",
          "funcAstName": "__ZL15OSReadSwapInt32PVKvm",
          "qualType": "uint32_t (const volatile void *, uintptr_t)",
          "range": {
            "start": {
              "line": 111,
              "column": 1
            },
            "end": {
              "line": 111,
              "column": 16
            }
          },
          "funcCalls": [
            {
              "funcName": "_OSSwapInt32",
              "funcAstName": "__ZL12_OSSwapInt32j",
              "qualType": "uint32_t (uint32_t)",
              "range": {
                "start": {
                  "line": 116,
                  "column": 9
                },
                "end": {
                  "line": 116,
                  "column": 86
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "OSReadSwapInt64",
          "funcAstName": "__ZL15OSReadSwapInt64PVKvm",
          "qualType": "uint64_t (const volatile void *, uintptr_t)",
          "range": {
            "start": {
              "line": 133,
              "column": 1
            },
            "end": {
              "line": 133,
              "column": 16
            }
          },
          "funcCalls": [
            {
              "funcName": "_OSSwapInt64",
              "funcAstName": "__ZL12_OSSwapInt64y",
              "qualType": "uint64_t (uint64_t)",
              "range": {
                "start": {
                  "line": 138,
                  "column": 9
                },
                "end": {
                  "line": 138,
                  "column": 86
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "OSWriteSwapInt16",
          "funcAstName": "__ZL16OSWriteSwapInt16PVvmt",
          "qualType": "void (volatile void *, uintptr_t, uint16_t)",
          "range": {
            "start": {
              "line": 158,
              "column": 1
            },
            "end": {
              "line": 158,
              "column": 17
            }
          },
          "funcCalls": [
            {
              "funcName": "_OSSwapInt16",
              "funcAstName": "__ZL12_OSSwapInt16t",
              "qualType": "uint16_t (uint16_t)",
              "range": {
                "start": {
                  "line": 164,
                  "column": 68
                },
                "end": {
                  "line": 164,
                  "column": 87
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "OSWriteSwapInt32",
          "funcAstName": "__ZL16OSWriteSwapInt32PVvmj",
          "qualType": "void (volatile void *, uintptr_t, uint32_t)",
          "range": {
            "start": {
              "line": 182,
              "column": 1
            },
            "end": {
              "line": 182,
              "column": 17
            }
          },
          "funcCalls": [
            {
              "funcName": "_OSSwapInt32",
              "funcAstName": "__ZL12_OSSwapInt32j",
              "qualType": "uint32_t (uint32_t)",
              "range": {
                "start": {
                  "line": 188,
                  "column": 68
                },
                "end": {
                  "line": 188,
                  "column": 87
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "OSWriteSwapInt64",
          "funcAstName": "__ZL16OSWriteSwapInt64PVvmy",
          "qualType": "void (volatile void *, uintptr_t, uint64_t)",
          "range": {
            "start": {
              "line": 206,
              "column": 1
            },
            "end": {
              "line": 206,
              "column": 17
            }
          },
          "funcCalls": [
            {
              "funcName": "_OSSwapInt64",
              "funcAstName": "__ZL12_OSSwapInt64y",
              "qualType": "uint64_t (uint64_t)",
              "range": {
                "start": {
                  "line": 212,
                  "column": 68
                },
                "end": {
                  "line": 212,
                  "column": 87
                }
              }
            }
          ],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/libkern/_OSByteOrder.h"
      ]
    },
    {
      "name": "/clang++/usr/include/libkern/_OSByteOrder.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/sys/_types/_ct_rune_t.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_rune_t.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/stdlib.h",
      "lastAnalyzed": 1722468181731,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [
        {
          "funcName": "abs",
          "funcAstName": "__Z3absB8ue170006l",
          "qualType": "long (long) noexcept",
          "range": {
            "start": {
              "line": 113,
              "column": 61
            },
            "end": {
              "line": 113,
              "column": 64
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "abs",
          "funcAstName": "__Z3absB8ue170006x",
          "qualType": "long long (long long) noexcept",
          "range": {
            "start": {
              "line": 116,
              "column": 66
            },
            "end": {
              "line": 116,
              "column": 69
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "abs",
          "funcAstName": "__Z3absB8ue170006f",
          "qualType": "float (float) noexcept",
          "range": {
            "start": {
              "line": 121,
              "column": 62
            },
            "end": {
              "line": 121,
              "column": 65
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "abs",
          "funcAstName": "__Z3absB8ue170006d",
          "qualType": "double (double) noexcept",
          "range": {
            "start": {
              "line": 125,
              "column": 63
            },
            "end": {
              "line": 125,
              "column": 66
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "abs",
          "funcAstName": "__Z3absB8ue170006e",
          "qualType": "long double (long double) noexcept",
          "range": {
            "start": {
              "line": 130,
              "column": 1
            },
            "end": {
              "line": 130,
              "column": 4
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "div",
          "funcAstName": "__Z3divB8ue170006ll",
          "qualType": "ldiv_t (long, long) noexcept",
          "range": {
            "start": {
              "line": 148,
              "column": 41
            },
            "end": {
              "line": 148,
              "column": 44
            }
          },
          "funcCalls": [
            {
              "funcName": "ldiv",
              "funcAstName": "_ldiv",
              "qualType": "ldiv_t (long, long)",
              "range": {
                "start": {
                  "line": 149,
                  "column": 10
                },
                "end": {
                  "line": 149,
                  "column": 26
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "div",
          "funcAstName": "__Z3divB8ue170006xx",
          "qualType": "lldiv_t (long long, long long) noexcept",
          "range": {
            "start": {
              "line": 152,
              "column": 42
            },
            "end": {
              "line": 152,
              "column": 45
            }
          },
          "funcCalls": [
            {
              "funcName": "lldiv",
              "funcAstName": "_lldiv",
              "qualType": "lldiv_t (long long, long long)",
              "range": {
                "start": {
                  "line": 154,
                  "column": 10
                },
                "end": {
                  "line": 154,
                  "column": 27
                }
              }
            }
          ],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/cstdlib"
      ]
    },
    {
      "name": "/clang++/usr/include/malloc/_malloc_type.h",
      "lastAnalyzed": 1722468181730,
      "classes": [
        {
          "name": "_malloc_zone_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "malloc_type_malloc",
          "funcAstName": "_malloc_type_malloc",
          "qualType": "void *(size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 57,
              "column": 33
            },
            "end": {
              "line": 57,
              "column": 51
            }
          }
        },
        {
          "funcName": "malloc_type_calloc",
          "funcAstName": "_malloc_type_calloc",
          "qualType": "void *(size_t, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 58,
              "column": 33
            },
            "end": {
              "line": 58,
              "column": 51
            }
          }
        },
        {
          "funcName": "malloc_type_free",
          "funcAstName": "_malloc_type_free",
          "qualType": "void (void *, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 59,
              "column": 33
            },
            "end": {
              "line": 59,
              "column": 49
            }
          }
        },
        {
          "funcName": "malloc_type_realloc",
          "funcAstName": "_malloc_type_realloc",
          "qualType": "void *(void *, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 60,
              "column": 33
            },
            "end": {
              "line": 60,
              "column": 52
            }
          }
        },
        {
          "funcName": "malloc_type_valloc",
          "funcAstName": "_malloc_type_valloc",
          "qualType": "void *(size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 61,
              "column": 33
            },
            "end": {
              "line": 61,
              "column": 51
            }
          }
        },
        {
          "funcName": "malloc_type_aligned_alloc",
          "funcAstName": "_malloc_type_aligned_alloc",
          "qualType": "void *(size_t, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 62,
              "column": 33
            },
            "end": {
              "line": 62,
              "column": 58
            }
          }
        },
        {
          "funcName": "malloc_type_posix_memalign",
          "funcAstName": "_malloc_type_posix_memalign",
          "qualType": "int (void **, size_t, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 64,
              "column": 33
            },
            "end": {
              "line": 64,
              "column": 59
            }
          }
        },
        {
          "funcName": "malloc_type_zone_malloc",
          "funcAstName": "_malloc_type_zone_malloc",
          "qualType": "void *(malloc_zone_t *, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 71,
              "column": 33
            },
            "end": {
              "line": 71,
              "column": 56
            }
          }
        },
        {
          "funcName": "malloc_type_zone_calloc",
          "funcAstName": "_malloc_type_zone_calloc",
          "qualType": "void *(malloc_zone_t *, size_t, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 72,
              "column": 33
            },
            "end": {
              "line": 72,
              "column": 56
            }
          }
        },
        {
          "funcName": "malloc_type_zone_free",
          "funcAstName": "_malloc_type_zone_free",
          "qualType": "void (malloc_zone_t *, void *, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 73,
              "column": 33
            },
            "end": {
              "line": 73,
              "column": 54
            }
          }
        },
        {
          "funcName": "malloc_type_zone_realloc",
          "funcAstName": "_malloc_type_zone_realloc",
          "qualType": "void *(malloc_zone_t *, void *, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 74,
              "column": 33
            },
            "end": {
              "line": 74,
              "column": 57
            }
          }
        },
        {
          "funcName": "malloc_type_zone_valloc",
          "funcAstName": "_malloc_type_zone_valloc",
          "qualType": "void *(malloc_zone_t *, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 75,
              "column": 33
            },
            "end": {
              "line": 75,
              "column": 56
            }
          }
        },
        {
          "funcName": "malloc_type_zone_memalign",
          "funcAstName": "_malloc_type_zone_memalign",
          "qualType": "void *(malloc_zone_t *, size_t, size_t, malloc_type_id_t)",
          "range": {
            "start": {
              "line": 76,
              "column": 33
            },
            "end": {
              "line": 76,
              "column": 58
            }
          }
        },
        {
          "funcName": "malloc",
          "funcAstName": "_malloc",
          "qualType": "void *(size_t)",
          "range": {
            "start": {
              "line": 54,
              "column": 7
            },
            "end": {
              "line": 54,
              "column": 13
            }
          }
        },
        {
          "funcName": "calloc",
          "funcAstName": "_calloc",
          "qualType": "void *(size_t, size_t)",
          "range": {
            "start": {
              "line": 55,
              "column": 7
            },
            "end": {
              "line": 55,
              "column": 13
            }
          }
        },
        {
          "funcName": "free",
          "funcAstName": "_free",
          "qualType": "void (void *)",
          "range": {
            "start": {
              "line": 56,
              "column": 7
            },
            "end": {
              "line": 56,
              "column": 11
            }
          }
        },
        {
          "funcName": "realloc",
          "funcAstName": "_realloc",
          "qualType": "void *(void *, size_t)",
          "range": {
            "start": {
              "line": 57,
              "column": 7
            },
            "end": {
              "line": 57,
              "column": 14
            }
          }
        },
        {
          "funcName": "reallocf",
          "funcAstName": "_reallocf",
          "qualType": "void *(void *, size_t)",
          "range": {
            "start": {
              "line": 58,
              "column": 7
            },
            "end": {
              "line": 58,
              "column": 15
            }
          }
        },
        {
          "funcName": "valloc",
          "funcAstName": "_valloc",
          "qualType": "void *(size_t)",
          "range": {
            "start": {
              "line": 60,
              "column": 7
            },
            "end": {
              "line": 60,
              "column": 13
            }
          }
        },
        {
          "funcName": "aligned_alloc",
          "funcAstName": "_aligned_alloc",
          "qualType": "void *(size_t, size_t)",
          "range": {
            "start": {
              "line": 65,
              "column": 7
            },
            "end": {
              "line": 65,
              "column": 20
            }
          }
        },
        {
          "funcName": "posix_memalign",
          "funcAstName": "_posix_memalign",
          "qualType": "int (void **, size_t, size_t)",
          "range": {
            "start": {
              "line": 68,
              "column": 7
            },
            "end": {
              "line": 68,
              "column": 21
            }
          }
        },
        {
          "funcName": "abort",
          "funcAstName": "_abort",
          "qualType": "void () __attribute__((noreturn))",
          "range": {
            "start": {
              "line": 131,
              "column": 7
            },
            "end": {
              "line": 131,
              "column": 12
            }
          }
        },
        {
          "funcName": "abs",
          "funcAstName": "_abs",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 132,
              "column": 6
            },
            "end": {
              "line": 132,
              "column": 9
            }
          }
        },
        {
          "funcName": "atexit",
          "funcAstName": "_atexit",
          "qualType": "int (void (* _Nonnull)())",
          "range": {
            "start": {
              "line": 133,
              "column": 6
            },
            "end": {
              "line": 133,
              "column": 12
            }
          }
        },
        {
          "funcName": "atof",
          "funcAstName": "_atof",
          "qualType": "double (const char *)",
          "range": {
            "start": {
              "line": 134,
              "column": 9
            },
            "end": {
              "line": 134,
              "column": 13
            }
          }
        },
        {
          "funcName": "atoi",
          "funcAstName": "_atoi",
          "qualType": "int (const char *)",
          "range": {
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 10
            }
          }
        },
        {
          "funcName": "atol",
          "funcAstName": "_atol",
          "qualType": "long (const char *)",
          "range": {
            "start": {
              "line": 136,
              "column": 7
            },
            "end": {
              "line": 136,
              "column": 11
            }
          }
        },
        {
          "funcName": "atoll",
          "funcAstName": "_atoll",
          "qualType": "long long (const char *)",
          "range": {
            "start": {
              "line": 139,
              "column": 3
            },
            "end": {
              "line": 139,
              "column": 8
            }
          }
        },
        {
          "funcName": "bsearch",
          "funcAstName": "_bsearch",
          "qualType": "void *(const void *, const void *, size_t, size_t, int (* _Nonnull)(const void *, const void *))",
          "range": {
            "start": {
              "line": 141,
              "column": 7
            },
            "end": {
              "line": 141,
              "column": 14
            }
          }
        },
        {
          "funcName": "div",
          "funcAstName": "_div",
          "qualType": "div_t (int, int)",
          "range": {
            "start": {
              "line": 144,
              "column": 8
            },
            "end": {
              "line": 144,
              "column": 11
            }
          }
        },
        {
          "funcName": "exit",
          "funcAstName": "_exit",
          "qualType": "void (int) __attribute__((noreturn))",
          "range": {
            "start": {
              "line": 145,
              "column": 7
            },
            "end": {
              "line": 145,
              "column": 11
            }
          }
        },
        {
          "funcName": "getenv",
          "funcAstName": "_getenv",
          "qualType": "char *(const char *)",
          "range": {
            "start": {
              "line": 147,
              "column": 7
            },
            "end": {
              "line": 147,
              "column": 13
            }
          }
        },
        {
          "funcName": "labs",
          "funcAstName": "_labs",
          "qualType": "long (long)",
          "range": {
            "start": {
              "line": 148,
              "column": 7
            },
            "end": {
              "line": 148,
              "column": 11
            }
          }
        },
        {
          "funcName": "ldiv",
          "funcAstName": "_ldiv",
          "qualType": "ldiv_t (long, long)",
          "range": {
            "start": {
              "line": 149,
              "column": 9
            },
            "end": {
              "line": 149,
              "column": 13
            }
          }
        },
        {
          "funcName": "llabs",
          "funcAstName": "_llabs",
          "qualType": "long long (long long)",
          "range": {
            "start": {
              "line": 152,
              "column": 3
            },
            "end": {
              "line": 152,
              "column": 8
            }
          }
        },
        {
          "funcName": "lldiv",
          "funcAstName": "_lldiv",
          "qualType": "lldiv_t (long long, long long)",
          "range": {
            "start": {
              "line": 153,
              "column": 10
            },
            "end": {
              "line": 153,
              "column": 15
            }
          }
        },
        {
          "funcName": "mblen",
          "funcAstName": "_mblen",
          "qualType": "int (const char *, size_t)",
          "range": {
            "start": {
              "line": 156,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 11
            }
          }
        },
        {
          "funcName": "mbstowcs",
          "funcAstName": "_mbstowcs",
          "qualType": "size_t (wchar_t *, const char *, size_t)",
          "range": {
            "start": {
              "line": 157,
              "column": 9
            },
            "end": {
              "line": 157,
              "column": 17
            }
          }
        },
        {
          "funcName": "mbtowc",
          "funcAstName": "_mbtowc",
          "qualType": "int (wchar_t *, const char *, size_t)",
          "range": {
            "start": {
              "line": 158,
              "column": 6
            },
            "end": {
              "line": 158,
              "column": 12
            }
          }
        },
        {
          "funcName": "qsort",
          "funcAstName": "_qsort",
          "qualType": "void (void *, size_t, size_t, int (* _Nonnull)(const void *, const void *))",
          "range": {
            "start": {
              "line": 160,
              "column": 7
            },
            "end": {
              "line": 160,
              "column": 12
            }
          }
        },
        {
          "funcName": "rand",
          "funcAstName": "_rand",
          "qualType": "int ()",
          "range": {
            "start": {
              "line": 162,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 10
            }
          }
        },
        {
          "funcName": "srand",
          "funcAstName": "_srand",
          "qualType": "void (unsigned int)",
          "range": {
            "start": {
              "line": 164,
              "column": 7
            },
            "end": {
              "line": 164,
              "column": 12
            }
          }
        },
        {
          "funcName": "strtod",
          "funcAstName": "_strtod",
          "qualType": "double (const char *, char **)",
          "range": {
            "start": {
              "line": 165,
              "column": 9
            },
            "end": {
              "line": 165,
              "column": 15
            }
          }
        },
        {
          "funcName": "strtof",
          "funcAstName": "_strtof",
          "qualType": "float (const char *, char **)",
          "range": {
            "start": {
              "line": 166,
              "column": 8
            },
            "end": {
              "line": 166,
              "column": 14
            }
          }
        },
        {
          "funcName": "strtol",
          "funcAstName": "_strtol",
          "qualType": "long (const char *, char **, int)",
          "range": {
            "start": {
              "line": 167,
              "column": 7
            },
            "end": {
              "line": 167,
              "column": 13
            }
          }
        },
        {
          "funcName": "strtold",
          "funcAstName": "_strtold",
          "qualType": "long double (const char *, char **)",
          "range": {
            "start": {
              "line": 169,
              "column": 3
            },
            "end": {
              "line": 169,
              "column": 10
            }
          }
        },
        {
          "funcName": "strtoll",
          "funcAstName": "_strtoll",
          "qualType": "long long (const char *, char **, int)",
          "range": {
            "start": {
              "line": 172,
              "column": 3
            },
            "end": {
              "line": 172,
              "column": 10
            }
          }
        },
        {
          "funcName": "strtoul",
          "funcAstName": "_strtoul",
          "qualType": "unsigned long (const char *, char **, int)",
          "range": {
            "start": {
              "line": 175,
              "column": 3
            },
            "end": {
              "line": 175,
              "column": 10
            }
          }
        },
        {
          "funcName": "strtoull",
          "funcAstName": "_strtoull",
          "qualType": "unsigned long long (const char *, char **, int)",
          "range": {
            "start": {
              "line": 178,
              "column": 3
            },
            "end": {
              "line": 178,
              "column": 11
            }
          }
        },
        {
          "funcName": "system",
          "funcAstName": "_system",
          "qualType": "int (const char *)",
          "range": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 12
            }
          }
        },
        {
          "funcName": "wcstombs",
          "funcAstName": "_wcstombs",
          "qualType": "size_t (char *, const wchar_t *, size_t)",
          "range": {
            "start": {
              "line": 187,
              "column": 9
            },
            "end": {
              "line": 187,
              "column": 17
            }
          }
        },
        {
          "funcName": "wctomb",
          "funcAstName": "_wctomb",
          "qualType": "int (char *, wchar_t)",
          "range": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 12
            }
          }
        },
        {
          "funcName": "_Exit",
          "funcAstName": "__Exit",
          "qualType": "void (int) __attribute__((noreturn))",
          "range": {
            "start": {
              "line": 191,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 11
            }
          }
        },
        {
          "funcName": "a64l",
          "funcAstName": "_a64l",
          "qualType": "long (const char *)",
          "range": {
            "start": {
              "line": 192,
              "column": 7
            },
            "end": {
              "line": 192,
              "column": 11
            }
          }
        },
        {
          "funcName": "drand48",
          "funcAstName": "_drand48",
          "qualType": "double ()",
          "range": {
            "start": {
              "line": 193,
              "column": 9
            },
            "end": {
              "line": 193,
              "column": 16
            }
          }
        },
        {
          "funcName": "ecvt",
          "funcAstName": "_ecvt",
          "qualType": "char *(double, int, int *, int *)",
          "range": {
            "start": {
              "line": 194,
              "column": 7
            },
            "end": {
              "line": 194,
              "column": 11
            }
          }
        },
        {
          "funcName": "erand48",
          "funcAstName": "_erand48",
          "qualType": "double (unsigned short *)",
          "range": {
            "start": {
              "line": 195,
              "column": 9
            },
            "end": {
              "line": 195,
              "column": 16
            }
          }
        },
        {
          "funcName": "fcvt",
          "funcAstName": "_fcvt",
          "qualType": "char *(double, int, int *, int *)",
          "range": {
            "start": {
              "line": 196,
              "column": 7
            },
            "end": {
              "line": 196,
              "column": 11
            }
          }
        },
        {
          "funcName": "gcvt",
          "funcAstName": "_gcvt",
          "qualType": "char *(double, int, char *)",
          "range": {
            "start": {
              "line": 197,
              "column": 7
            },
            "end": {
              "line": 197,
              "column": 11
            }
          }
        },
        {
          "funcName": "getsubopt",
          "funcAstName": "_getsubopt",
          "qualType": "int (char **, char *const *, char **)",
          "range": {
            "start": {
              "line": 198,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 15
            }
          }
        },
        {
          "funcName": "grantpt",
          "funcAstName": "_grantpt",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 199,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 13
            }
          }
        },
        {
          "funcName": "initstate",
          "funcAstName": "_initstate",
          "qualType": "char *(unsigned int, char *, size_t)",
          "range": {
            "start": {
              "line": 201,
              "column": 7
            },
            "end": {
              "line": 201,
              "column": 16
            }
          }
        },
        {
          "funcName": "jrand48",
          "funcAstName": "_jrand48",
          "qualType": "long (unsigned short *)",
          "range": {
            "start": {
              "line": 205,
              "column": 7
            },
            "end": {
              "line": 205,
              "column": 14
            }
          }
        },
        {
          "funcName": "l64a",
          "funcAstName": "_l64a",
          "qualType": "char *(long)",
          "range": {
            "start": {
              "line": 206,
              "column": 7
            },
            "end": {
              "line": 206,
              "column": 11
            }
          }
        },
        {
          "funcName": "lcong48",
          "funcAstName": "_lcong48",
          "qualType": "void (unsigned short *)",
          "range": {
            "start": {
              "line": 207,
              "column": 7
            },
            "end": {
              "line": 207,
              "column": 14
            }
          }
        },
        {
          "funcName": "lrand48",
          "funcAstName": "_lrand48",
          "qualType": "long ()",
          "range": {
            "start": {
              "line": 208,
              "column": 7
            },
            "end": {
              "line": 208,
              "column": 14
            }
          }
        },
        {
          "funcName": "mktemp",
          "funcAstName": "_mktemp",
          "qualType": "char *(char *)",
          "range": {
            "start": {
              "line": 212,
              "column": 7
            },
            "end": {
              "line": 212,
              "column": 13
            }
          }
        },
        {
          "funcName": "mkstemp",
          "funcAstName": "_mkstemp",
          "qualType": "int (char *)",
          "range": {
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 13
            }
          }
        },
        {
          "funcName": "mrand48",
          "funcAstName": "_mrand48",
          "qualType": "long ()",
          "range": {
            "start": {
              "line": 214,
              "column": 7
            },
            "end": {
              "line": 214,
              "column": 14
            }
          }
        },
        {
          "funcName": "nrand48",
          "funcAstName": "_nrand48",
          "qualType": "long (unsigned short *)",
          "range": {
            "start": {
              "line": 215,
              "column": 7
            },
            "end": {
              "line": 215,
              "column": 14
            }
          }
        },
        {
          "funcName": "posix_openpt",
          "funcAstName": "_posix_openpt",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 216,
              "column": 18
            }
          }
        },
        {
          "funcName": "ptsname",
          "funcAstName": "_ptsname",
          "qualType": "char *(int)",
          "range": {
            "start": {
              "line": 217,
              "column": 7
            },
            "end": {
              "line": 217,
              "column": 14
            }
          }
        },
        {
          "funcName": "ptsname_r",
          "funcAstName": "_ptsname_r",
          "qualType": "int (int, char *, size_t)",
          "range": {
            "start": {
              "line": 220,
              "column": 5
            },
            "end": {
              "line": 220,
              "column": 14
            }
          }
        },
        {
          "funcName": "putenv",
          "funcAstName": "_putenv",
          "qualType": "int (char *)",
          "range": {
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 12
            }
          }
        },
        {
          "funcName": "random",
          "funcAstName": "_random",
          "qualType": "long ()",
          "range": {
            "start": {
              "line": 224,
              "column": 7
            },
            "end": {
              "line": 224,
              "column": 13
            }
          }
        },
        {
          "funcName": "rand_r",
          "funcAstName": "_rand_r",
          "qualType": "int (unsigned int *)",
          "range": {
            "start": {
              "line": 225,
              "column": 6
            },
            "end": {
              "line": 225,
              "column": 12
            }
          }
        },
        {
          "funcName": "realpath",
          "funcAstName": "_realpath$DARWIN_EXTSN",
          "qualType": "char *(const char *, char *)",
          "range": {
            "start": {
              "line": 227,
              "column": 7
            },
            "end": {
              "line": 227,
              "column": 15
            }
          }
        },
        {
          "funcName": "seed48",
          "funcAstName": "_seed48",
          "qualType": "unsigned short *(unsigned short *)",
          "range": {
            "start": {
              "line": 232,
              "column": 3
            },
            "end": {
              "line": 232,
              "column": 9
            }
          }
        },
        {
          "funcName": "setenv",
          "funcAstName": "_setenv",
          "qualType": "int (const char *, const char *, int)",
          "range": {
            "start": {
              "line": 233,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 12
            }
          }
        },
        {
          "funcName": "setkey",
          "funcAstName": "_setkey",
          "qualType": "void (const char *)",
          "range": {
            "start": {
              "line": 235,
              "column": 7
            },
            "end": {
              "line": 235,
              "column": 13
            }
          }
        },
        {
          "funcName": "setstate",
          "funcAstName": "_setstate",
          "qualType": "char *(const char *)",
          "range": {
            "start": {
              "line": 239,
              "column": 7
            },
            "end": {
              "line": 239,
              "column": 15
            }
          }
        },
        {
          "funcName": "srand48",
          "funcAstName": "_srand48",
          "qualType": "void (long)",
          "range": {
            "start": {
              "line": 240,
              "column": 7
            },
            "end": {
              "line": 240,
              "column": 14
            }
          }
        },
        {
          "funcName": "srandom",
          "funcAstName": "_srandom",
          "qualType": "void (unsigned int)",
          "range": {
            "start": {
              "line": 242,
              "column": 7
            },
            "end": {
              "line": 242,
              "column": 14
            }
          }
        },
        {
          "funcName": "unlockpt",
          "funcAstName": "_unlockpt",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 246,
              "column": 14
            }
          }
        },
        {
          "funcName": "unsetenv",
          "funcAstName": "_unsetenv",
          "qualType": "int (const char *)",
          "range": {
            "start": {
              "line": 248,
              "column": 6
            },
            "end": {
              "line": 248,
              "column": 14
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/malloc/_malloc.h"
      ]
    },
    {
      "name": "/clang++/usr/include/malloc/_malloc.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/sys/_types/_dev_t.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/sys/_types/_mode_t.h",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [
        {
          "funcName": "arc4random",
          "funcAstName": "_arc4random",
          "qualType": "uint32_t ()",
          "range": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 262,
              "column": 20
            }
          }
        },
        {
          "funcName": "arc4random_addrandom",
          "funcAstName": "_arc4random_addrandom",
          "qualType": "void (unsigned char *, int)",
          "range": {
            "start": {
              "line": 263,
              "column": 7
            },
            "end": {
              "line": 263,
              "column": 27
            }
          }
        },
        {
          "funcName": "arc4random_buf",
          "funcAstName": "_arc4random_buf",
          "qualType": "void (void *, size_t)",
          "range": {
            "start": {
              "line": 268,
              "column": 7
            },
            "end": {
              "line": 268,
              "column": 21
            }
          }
        },
        {
          "funcName": "arc4random_stir",
          "funcAstName": "_arc4random_stir",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 269,
              "column": 7
            },
            "end": {
              "line": 269,
              "column": 22
            }
          }
        },
        {
          "funcName": "arc4random_uniform",
          "funcAstName": "_arc4random_uniform",
          "qualType": "uint32_t (uint32_t)",
          "range": {
            "start": {
              "line": 271,
              "column": 3
            },
            "end": {
              "line": 271,
              "column": 21
            }
          }
        },
        {
          "funcName": "atexit_b",
          "funcAstName": "_atexit_b",
          "qualType": "int (void (^ _Nonnull)())",
          "range": {
            "start": {
              "line": 273,
              "column": 6
            },
            "end": {
              "line": 273,
              "column": 14
            }
          }
        },
        {
          "funcName": "bsearch_b",
          "funcAstName": "_bsearch_b",
          "qualType": "void *(const void *, const void *, size_t, size_t, __attribute__((noescape)) __bsearch_noescape int (^)(const void *, const void *))",
          "range": {
            "start": {
              "line": 282,
              "column": 7
            },
            "end": {
              "line": 282,
              "column": 16
            }
          }
        },
        {
          "funcName": "cgetcap",
          "funcAstName": "_cgetcap",
          "qualType": "char *(char *, const char *, int)",
          "range": {
            "start": {
              "line": 288,
              "column": 7
            },
            "end": {
              "line": 288,
              "column": 14
            }
          }
        },
        {
          "funcName": "cgetclose",
          "funcAstName": "_cgetclose",
          "qualType": "int ()",
          "range": {
            "start": {
              "line": 289,
              "column": 6
            },
            "end": {
              "line": 289,
              "column": 15
            }
          }
        },
        {
          "funcName": "cgetent",
          "funcAstName": "_cgetent",
          "qualType": "int (char **, char **, const char *)",
          "range": {
            "start": {
              "line": 290,
              "column": 6
            },
            "end": {
              "line": 290,
              "column": 13
            }
          }
        },
        {
          "funcName": "cgetfirst",
          "funcAstName": "_cgetfirst",
          "qualType": "int (char **, char **)",
          "range": {
            "start": {
              "line": 291,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 15
            }
          }
        },
        {
          "funcName": "cgetmatch",
          "funcAstName": "_cgetmatch",
          "qualType": "int (const char *, const char *)",
          "range": {
            "start": {
              "line": 292,
              "column": 6
            },
            "end": {
              "line": 292,
              "column": 15
            }
          }
        },
        {
          "funcName": "cgetnext",
          "funcAstName": "_cgetnext",
          "qualType": "int (char **, char **)",
          "range": {
            "start": {
              "line": 293,
              "column": 6
            },
            "end": {
              "line": 293,
              "column": 14
            }
          }
        },
        {
          "funcName": "cgetnum",
          "funcAstName": "_cgetnum",
          "qualType": "int (char *, const char *, long *)",
          "range": {
            "start": {
              "line": 294,
              "column": 6
            },
            "end": {
              "line": 294,
              "column": 13
            }
          }
        },
        {
          "funcName": "cgetset",
          "funcAstName": "_cgetset",
          "qualType": "int (const char *)",
          "range": {
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 13
            }
          }
        },
        {
          "funcName": "cgetstr",
          "funcAstName": "_cgetstr",
          "qualType": "int (char *, const char *, char **)",
          "range": {
            "start": {
              "line": 296,
              "column": 6
            },
            "end": {
              "line": 296,
              "column": 13
            }
          }
        },
        {
          "funcName": "cgetustr",
          "funcAstName": "_cgetustr",
          "qualType": "int (char *, const char *, char **)",
          "range": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 297,
              "column": 14
            }
          }
        },
        {
          "funcName": "daemon",
          "funcAstName": "_daemon",
          "qualType": "int (int, int)",
          "range": {
            "start": {
              "line": 299,
              "column": 6
            },
            "end": {
              "line": 299,
              "column": 12
            }
          }
        },
        {
          "funcName": "devname",
          "funcAstName": "_devname",
          "qualType": "char *(dev_t, mode_t)",
          "range": {
            "start": {
              "line": 300,
              "column": 7
            },
            "end": {
              "line": 300,
              "column": 14
            }
          }
        },
        {
          "funcName": "devname_r",
          "funcAstName": "_devname_r",
          "qualType": "char *(dev_t, mode_t, char *, int)",
          "range": {
            "start": {
              "line": 301,
              "column": 7
            },
            "end": {
              "line": 301,
              "column": 16
            }
          }
        },
        {
          "funcName": "getbsize",
          "funcAstName": "_getbsize",
          "qualType": "char *(int *, long *)",
          "range": {
            "start": {
              "line": 302,
              "column": 7
            },
            "end": {
              "line": 302,
              "column": 15
            }
          }
        },
        {
          "funcName": "getloadavg",
          "funcAstName": "_getloadavg",
          "qualType": "int (double *, int)",
          "range": {
            "start": {
              "line": 303,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 16
            }
          }
        },
        {
          "funcName": "getprogname",
          "funcAstName": "_getprogname",
          "qualType": "const char *()",
          "range": {
            "start": {
              "line": 305,
              "column": 3
            },
            "end": {
              "line": 305,
              "column": 14
            }
          }
        },
        {
          "funcName": "setprogname",
          "funcAstName": "_setprogname",
          "qualType": "void (const char *)",
          "range": {
            "start": {
              "line": 306,
              "column": 7
            },
            "end": {
              "line": 306,
              "column": 18
            }
          }
        },
        {
          "funcName": "heapsort",
          "funcAstName": "_heapsort",
          "qualType": "int (void *, size_t, size_t, int (* _Nonnull)(const void *, const void *))",
          "range": {
            "start": {
              "line": 316,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 14
            }
          }
        },
        {
          "funcName": "heapsort_b",
          "funcAstName": "_heapsort_b",
          "qualType": "int (void *, size_t, size_t, __attribute__((noescape)) __sort_noescape int (^)(const void *, const void *))",
          "range": {
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 319,
              "column": 16
            }
          }
        },
        {
          "funcName": "mergesort",
          "funcAstName": "_mergesort",
          "qualType": "int (void *, size_t, size_t, int (* _Nonnull)(const void *, const void *))",
          "range": {
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 15
            }
          }
        },
        {
          "funcName": "mergesort_b",
          "funcAstName": "_mergesort_b",
          "qualType": "int (void *, size_t, size_t, __attribute__((noescape)) __sort_noescape int (^)(const void *, const void *))",
          "range": {
            "start": {
              "line": 326,
              "column": 6
            },
            "end": {
              "line": 326,
              "column": 17
            }
          }
        },
        {
          "funcName": "psort",
          "funcAstName": "_psort",
          "qualType": "void (void *, size_t, size_t, int (* _Nonnull)(const void *, const void *))",
          "range": {
            "start": {
              "line": 330,
              "column": 7
            },
            "end": {
              "line": 330,
              "column": 12
            }
          }
        },
        {
          "funcName": "psort_b",
          "funcAstName": "_psort_b",
          "qualType": "void (void *, size_t, size_t, __attribute__((noescape)) __sort_noescape int (^)(const void *, const void *))",
          "range": {
            "start": {
              "line": 334,
              "column": 7
            },
            "end": {
              "line": 334,
              "column": 14
            }
          }
        },
        {
          "funcName": "psort_r",
          "funcAstName": "_psort_r",
          "qualType": "void (void *, size_t, size_t, void *, int (* _Nonnull)(void *, const void *, const void *))",
          "range": {
            "start": {
              "line": 338,
              "column": 7
            },
            "end": {
              "line": 338,
              "column": 14
            }
          }
        },
        {
          "funcName": "qsort_b",
          "funcAstName": "_qsort_b",
          "qualType": "void (void *, size_t, size_t, __attribute__((noescape)) __sort_noescape int (^)(const void *, const void *))",
          "range": {
            "start": {
              "line": 342,
              "column": 7
            },
            "end": {
              "line": 342,
              "column": 14
            }
          }
        },
        {
          "funcName": "qsort_r",
          "funcAstName": "_qsort_r",
          "qualType": "void (void *, size_t, size_t, void *, int (* _Nonnull)(void *, const void *, const void *))",
          "range": {
            "start": {
              "line": 346,
              "column": 7
            },
            "end": {
              "line": 346,
              "column": 14
            }
          }
        },
        {
          "funcName": "radixsort",
          "funcAstName": "_radixsort",
          "qualType": "int (const unsigned char **, int, const unsigned char *, unsigned int)",
          "range": {
            "start": {
              "line": 348,
              "column": 6
            },
            "end": {
              "line": 348,
              "column": 15
            }
          }
        },
        {
          "funcName": "rpmatch",
          "funcAstName": "_rpmatch",
          "qualType": "int (const char *)",
          "range": {
            "start": {
              "line": 350,
              "column": 5
            },
            "end": {
              "line": 350,
              "column": 12
            }
          }
        },
        {
          "funcName": "sradixsort",
          "funcAstName": "_sradixsort",
          "qualType": "int (const unsigned char **, int, const unsigned char *, unsigned int)",
          "range": {
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 352,
              "column": 16
            }
          }
        },
        {
          "funcName": "sranddev",
          "funcAstName": "_sranddev",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 354,
              "column": 7
            },
            "end": {
              "line": 354,
              "column": 15
            }
          }
        },
        {
          "funcName": "srandomdev",
          "funcAstName": "_srandomdev",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 355,
              "column": 7
            },
            "end": {
              "line": 355,
              "column": 17
            }
          }
        },
        {
          "funcName": "strtonum",
          "funcAstName": "_strtonum",
          "qualType": "long long (const char *, long long, long long, const char **)",
          "range": {
            "start": {
              "line": 358,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 10
            }
          }
        },
        {
          "funcName": "strtoq",
          "funcAstName": "_strtoq",
          "qualType": "long long (const char *, char **, int)",
          "range": {
            "start": {
              "line": 362,
              "column": 3
            },
            "end": {
              "line": 362,
              "column": 9
            }
          }
        },
        {
          "funcName": "strtouq",
          "funcAstName": "_strtouq",
          "qualType": "unsigned long long (const char *, char **, int)",
          "range": {
            "start": {
              "line": 364,
              "column": 3
            },
            "end": {
              "line": 364,
              "column": 10
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/stdlib.h"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/cstdlib",
      "lastAnalyzed": 1722468181730,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/c++/v1/__memory/construct_at.h",
      "lastAnalyzed": 1722468181731,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/c++/v1/__exception/operations.h",
      "lastAnalyzed": 1722468181732,
      "classes": [
        {
          "name": "exception_ptr",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "set_terminate",
          "funcAstName": "__ZSt13set_terminatePFvvE",
          "qualType": "terminate_handler (terminate_handler) noexcept",
          "range": {
            "start": {
              "line": 30,
              "column": 45
            },
            "end": {
              "line": 30,
              "column": 58
            }
          }
        },
        {
          "funcName": "get_terminate",
          "funcAstName": "__ZSt13get_terminatev",
          "qualType": "terminate_handler () noexcept",
          "range": {
            "start": {
              "line": 31,
              "column": 45
            },
            "end": {
              "line": 31,
              "column": 58
            }
          }
        },
        {
          "funcName": "uncaught_exception",
          "funcAstName": "__ZSt18uncaught_exceptionv",
          "qualType": "bool () noexcept",
          "range": {
            "start": {
              "line": 33,
              "column": 32
            },
            "end": {
              "line": 33,
              "column": 50
            }
          }
        },
        {
          "funcName": "uncaught_exceptions",
          "funcAstName": "__ZSt19uncaught_exceptionsv",
          "qualType": "int () noexcept",
          "range": {
            "start": {
              "line": 34,
              "column": 72
            },
            "end": {
              "line": 34,
              "column": 91
            }
          }
        },
        {
          "funcName": "current_exception",
          "funcAstName": "__ZSt17current_exceptionv",
          "qualType": "exception_ptr () noexcept",
          "range": {
            "start": {
              "line": 38,
              "column": 41
            },
            "end": {
              "line": 38,
              "column": 58
            }
          }
        },
        {
          "funcName": "rethrow_exception",
          "funcAstName": "__ZSt17rethrow_exceptionSt13exception_ptr",
          "qualType": "void (exception_ptr)",
          "range": {
            "start": {
              "line": 39,
              "column": 49
            },
            "end": {
              "line": 39,
              "column": 66
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/__exception/exception_ptr.h"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/__exception/exception_ptr.h",
      "lastAnalyzed": 1722468181732,
      "classes": [
        {
          "name": "exception_ptr",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt13exception_ptraSERKS_",
              "qualType": "exception_ptr &(const exception_ptr &) noexcept",
              "range": {
                "start": {
                  "line": 34,
                  "column": 18
                },
                "end": {
                  "line": 34,
                  "column": 26
                }
              }
            },
            {
              "funcName": "current_exception",
              "funcAstName": "__ZSt17current_exceptionv",
              "qualType": "exception_ptr () noexcept",
              "range": {
                "start": {
                  "line": 47,
                  "column": 50
                },
                "end": {
                  "line": 47,
                  "column": 67
                }
              }
            },
            {
              "funcName": "rethrow_exception",
              "funcAstName": "__ZSt17rethrow_exceptionSt13exception_ptr",
              "qualType": "void (exception_ptr)",
              "range": {
                "start": {
                  "line": 48,
                  "column": 41
                },
                "end": {
                  "line": 48,
                  "column": 58
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator==",
              "funcAstName": "__ZSteqB8ue170006RKSt13exception_ptrS1_",
              "qualType": "bool (const exception_ptr &, const exception_ptr &) noexcept",
              "range": {
                "start": {
                  "line": 39,
                  "column": 37
                },
                "end": {
                  "line": 39,
                  "column": 45
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator!=",
              "funcAstName": "__ZStneB8ue170006RKSt13exception_ptrS1_",
              "qualType": "bool (const exception_ptr &, const exception_ptr &) noexcept",
              "range": {
                "start": {
                  "line": 43,
                  "column": 37
                },
                "end": {
                  "line": 43,
                  "column": 45
                }
              },
              "funcCalls": [
                {
                  "funcName": "operator==",
                  "funcAstName": "__ZSteqB8ue170006RKSt13exception_ptrS1_",
                  "qualType": "bool (const exception_ptr &, const exception_ptr &) noexcept",
                  "range": {
                    "start": {
                      "line": 381,
                      "column": -1
                    },
                    "end": {
                      "line": 381,
                      "column": 33
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_void",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "add_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "remove_extent",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "decay",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_base_of",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_class",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_convertible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_final",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_polymorphic",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/exception"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/exception",
      "lastAnalyzed": 1722468181732,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/c++/v1/__exception/nested_exception.h",
      "lastAnalyzed": 1722468181732,
      "classes": [
        {
          "name": "nested_exception",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "rethrow_nested",
              "funcAstName": "__ZNKSt16nested_exception14rethrow_nestedEv",
              "qualType": "void () const",
              "range": {
                "start": {
                  "line": 41,
                  "column": 25
                },
                "end": {
                  "line": 41,
                  "column": 39
                }
              }
            },
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt16nested_exceptionaSERKS_",
              "qualType": "std::nested_exception &(const std::nested_exception &)",
              "range": {
                "start": {
                  "line": 31,
                  "column": 33
                },
                "end": {
                  "line": 31,
                  "column": 49
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "nested_ptr",
              "funcAstName": "__ZNKSt16nested_exception10nested_ptrB8ue170006Ev",
              "qualType": "exception_ptr () const noexcept",
              "range": {
                "start": {
                  "line": 42,
                  "column": 39
                },
                "end": {
                  "line": 42,
                  "column": 49
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/exception"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/__exception/terminate.h",
      "lastAnalyzed": 1725057898817,
      "classes": [
        {
          "name": "hash",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIbEclB8ue170006Eb",
              "qualType": "size_t (bool) const noexcept",
              "range": {
                "start": {
                  "line": 403,
                  "column": 12
                },
                "end": {
                  "line": 403,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIcEclB8ue170006Ec",
              "qualType": "size_t (char) const noexcept",
              "range": {
                "start": {
                  "line": 411,
                  "column": 12
                },
                "end": {
                  "line": 411,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIaEclB8ue170006Ea",
              "qualType": "size_t (signed char) const noexcept",
              "range": {
                "start": {
                  "line": 419,
                  "column": 12
                },
                "end": {
                  "line": 419,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIhEclB8ue170006Eh",
              "qualType": "size_t (unsigned char) const noexcept",
              "range": {
                "start": {
                  "line": 427,
                  "column": 12
                },
                "end": {
                  "line": 427,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIDuEclB8ue170006EDu",
              "qualType": "size_t (char8_t) const noexcept",
              "range": {
                "start": {
                  "line": 436,
                  "column": 12
                },
                "end": {
                  "line": 436,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIDsEclB8ue170006EDs",
              "qualType": "size_t (char16_t) const noexcept",
              "range": {
                "start": {
                  "line": 445,
                  "column": 12
                },
                "end": {
                  "line": 445,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIDiEclB8ue170006EDi",
              "qualType": "size_t (char32_t) const noexcept",
              "range": {
                "start": {
                  "line": 453,
                  "column": 12
                },
                "end": {
                  "line": 453,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIwEclB8ue170006Ew",
              "qualType": "size_t (wchar_t) const noexcept",
              "range": {
                "start": {
                  "line": 462,
                  "column": 12
                },
                "end": {
                  "line": 462,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIsEclB8ue170006Es",
              "qualType": "size_t (short) const noexcept",
              "range": {
                "start": {
                  "line": 471,
                  "column": 12
                },
                "end": {
                  "line": 471,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashItEclB8ue170006Et",
              "qualType": "size_t (unsigned short) const noexcept",
              "range": {
                "start": {
                  "line": 479,
                  "column": 12
                },
                "end": {
                  "line": 479,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIiEclB8ue170006Ei",
              "qualType": "size_t (int) const noexcept",
              "range": {
                "start": {
                  "line": 487,
                  "column": 12
                },
                "end": {
                  "line": 487,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIjEclB8ue170006Ej",
              "qualType": "size_t (unsigned int) const noexcept",
              "range": {
                "start": {
                  "line": 495,
                  "column": 12
                },
                "end": {
                  "line": 495,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIlEclB8ue170006El",
              "qualType": "size_t (long) const noexcept",
              "range": {
                "start": {
                  "line": 503,
                  "column": 12
                },
                "end": {
                  "line": 503,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashImEclB8ue170006Em",
              "qualType": "size_t (unsigned long) const noexcept",
              "range": {
                "start": {
                  "line": 511,
                  "column": 12
                },
                "end": {
                  "line": 511,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIfEclB8ue170006Ef",
              "qualType": "size_t (float) const noexcept",
              "range": {
                "start": {
                  "line": 547,
                  "column": 12
                },
                "end": {
                  "line": 547,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIdEclB8ue170006Ed",
              "qualType": "size_t (double) const noexcept",
              "range": {
                "start": {
                  "line": 561,
                  "column": 12
                },
                "end": {
                  "line": 561,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIeEclB8ue170006Ee",
              "qualType": "size_t (long double) const noexcept",
              "range": {
                "start": {
                  "line": 575,
                  "column": 12
                },
                "end": {
                  "line": 575,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__14hashIDnEclB8ue170006EDn",
              "qualType": "size_t (nullptr_t) const noexcept",
              "range": {
                "start": {
                  "line": 650,
                  "column": 12
                },
                "end": {
                  "line": 650,
                  "column": 20
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "add_cv",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "add_volatile",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "aligned_storage",
          "parentClasses": [],
          "classes": [
            {
              "name": "type",
              "parentClasses": [],
              "classes": [],
              "funcDecls": [],
              "funcImpls": [],
              "virtualFuncDecls": [],
              "virtualFuncImpls": []
            }
          ],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "type",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "aligned_union",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_volatile",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "pair",
          "parentClasses": [],
          "classes": [
            {
              "name": "_CheckArgs",
              "parentClasses": [],
              "classes": [],
              "funcDecls": [],
              "funcImpls": [
                {
                  "funcName": "__is_pair_constructible",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs23__is_pair_constructibleB8ue170006IRKmS5_EEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 142,
                      "column": 51
                    },
                    "end": {
                      "line": 142,
                      "column": 74
                    }
                  },
                  "funcCalls": [],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__is_pair_constructible",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs23__is_pair_constructibleB8ue170006ImmEEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 142,
                      "column": 51
                    },
                    "end": {
                      "line": 142,
                      "column": 74
                    }
                  },
                  "funcCalls": [],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__is_implicit",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs13__is_implicitB8ue170006IRKmS5_EEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 148,
                      "column": 51
                    },
                    "end": {
                      "line": 148,
                      "column": 64
                    }
                  },
                  "funcCalls": [],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__is_implicit",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs13__is_implicitB8ue170006ImmEEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 148,
                      "column": 51
                    },
                    "end": {
                      "line": 148,
                      "column": 64
                    }
                  },
                  "funcCalls": [],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__enable_explicit",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs17__enable_explicitB8ue170006IRKmS5_EEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 154,
                      "column": 51
                    },
                    "end": {
                      "line": 154,
                      "column": 68
                    }
                  },
                  "funcCalls": [
                    {
                      "funcName": "__is_pair_constructible",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs23__is_pair_constructibleB8ue170006IRKmS5_EEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 155,
                          "column": 18
                        },
                        "end": {
                          "line": 155,
                          "column": 53
                        }
                      }
                    },
                    {
                      "funcName": "__is_implicit",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs13__is_implicitB8ue170006IRKmS5_EEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 155,
                          "column": 58
                        },
                        "end": {
                          "line": 155,
                          "column": 83
                        }
                      }
                    }
                  ],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__enable_explicit",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs17__enable_explicitB8ue170006ImmEEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 154,
                      "column": 51
                    },
                    "end": {
                      "line": 154,
                      "column": 68
                    }
                  },
                  "funcCalls": [
                    {
                      "funcName": "__is_pair_constructible",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs23__is_pair_constructibleB8ue170006ImmEEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 155,
                          "column": 18
                        },
                        "end": {
                          "line": 155,
                          "column": 53
                        }
                      }
                    },
                    {
                      "funcName": "__is_implicit",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs13__is_implicitB8ue170006ImmEEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 155,
                          "column": 58
                        },
                        "end": {
                          "line": 155,
                          "column": 83
                        }
                      }
                    }
                  ],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__enable_implicit",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs17__enable_implicitB8ue170006IRKmS5_EEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 159,
                      "column": 51
                    },
                    "end": {
                      "line": 159,
                      "column": 68
                    }
                  },
                  "funcCalls": [
                    {
                      "funcName": "__is_pair_constructible",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs23__is_pair_constructibleB8ue170006IRKmS5_EEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 160,
                          "column": 18
                        },
                        "end": {
                          "line": 160,
                          "column": 53
                        }
                      }
                    },
                    {
                      "funcName": "__is_implicit",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs13__is_implicitB8ue170006IRKmS5_EEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 160,
                          "column": 57
                        },
                        "end": {
                          "line": 160,
                          "column": 82
                        }
                      }
                    }
                  ],
                  "virtualFuncCalls": []
                },
                {
                  "funcName": "__enable_implicit",
                  "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs17__enable_implicitB8ue170006ImmEEbv",
                  "qualType": "bool ()",
                  "range": {
                    "start": {
                      "line": 159,
                      "column": 51
                    },
                    "end": {
                      "line": 159,
                      "column": 68
                    }
                  },
                  "funcCalls": [
                    {
                      "funcName": "__is_pair_constructible",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs23__is_pair_constructibleB8ue170006ImmEEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 160,
                          "column": 18
                        },
                        "end": {
                          "line": 160,
                          "column": 53
                        }
                      }
                    },
                    {
                      "funcName": "__is_implicit",
                      "funcAstName": "__ZNSt3__14pairImmE10_CheckArgs13__is_implicitB8ue170006ImmEEbv",
                      "qualType": "bool ()",
                      "range": {
                        "start": {
                          "line": 160,
                          "column": 57
                        },
                        "end": {
                          "line": 160,
                          "column": 82
                        }
                      }
                    }
                  ],
                  "virtualFuncCalls": []
                }
              ],
              "virtualFuncDecls": [],
              "virtualFuncImpls": []
            }
          ],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__14pairImmEaSB8ue170006ERKS1_",
              "qualType": "pair<unsigned long, unsigned long> &(const __conditional_t<is_copy_assignable<first_type>::value && is_copy_assignable<second_type>::value, pair<unsigned long, unsigned long>, __nat> &)",
              "range": {
                "start": {
                  "line": 319,
                  "column": 11
                },
                "end": {
                  "line": 319,
                  "column": 19
                }
              }
            },
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__14pairImmEaSB8ue170006ImmLPv0EEERS1_RKNS0_IT_T0_EE",
              "qualType": "pair<unsigned long, unsigned long> &(const pair<unsigned long, unsigned long> &)",
              "range": {
                "start": {
                  "line": 349,
                  "column": 11
                },
                "end": {
                  "line": 349,
                  "column": 19
                }
              }
            },
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__14pairImmEaSB8ue170006ImmLPv0EEERS1_ONS0_IT_T0_EE",
              "qualType": "pair<unsigned long, unsigned long> &(pair<unsigned long, unsigned long> &&)",
              "range": {
                "start": {
                  "line": 360,
                  "column": 11
                },
                "end": {
                  "line": 360,
                  "column": 19
                }
              }
            },
            {
              "funcName": "swap",
              "funcAstName": "__ZNSt3__14pairImmE4swapB8ue170006ERS1_",
              "qualType": "void (pair<unsigned long, unsigned long> &)",
              "range": {
                "start": {
                  "line": 571,
                  "column": 5
                },
                "end": {
                  "line": 571,
                  "column": 9
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__14pairImmEaSB8ue170006EOS1_",
              "qualType": "pair<unsigned long, unsigned long> &(__conditional_t<is_move_assignable<first_type>::value && is_move_assignable<second_type>::value, pair<unsigned long, unsigned long>, __nat> &&) noexcept(is_nothrow_move_assignable<first_type>::value && is_nothrow_move_assignable<second_type>::value)",
              "range": {
                "start": {
                  "line": 332,
                  "column": 11
                },
                "end": {
                  "line": 332,
                  "column": 19
                }
              },
              "funcCalls": [
                {
                  "funcName": "forward",
                  "funcAstName": "__ZNSt3__17forwardB8ue170006ImEEOT_Ru20__remove_reference_tIS1_E",
                  "qualType": "unsigned long &&(__libcpp_remove_reference_t<unsigned long> &) noexcept",
                  "range": {
                    "start": {
                      "line": 339,
                      "column": 17
                    },
                    "end": {
                      "line": 339,
                      "column": 52
                    }
                  }
                },
                {
                  "funcName": "forward",
                  "funcAstName": "__ZNSt3__17forwardB8ue170006ImEEOT_Ru20__remove_reference_tIS1_E",
                  "qualType": "unsigned long &&(__libcpp_remove_reference_t<unsigned long> &) noexcept",
                  "range": {
                    "start": {
                      "line": 340,
                      "column": 18
                    },
                    "end": {
                      "line": 340,
                      "column": 55
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "remove_cvref",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "common_type",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "common_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "basic_common_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "conjunction",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_OrImpl",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "disjunction",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "extent",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "remove_all_extents",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "has_unique_object_representations",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "has_virtual_destructor",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_member_function_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_member_object_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "reference_wrapper",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_invocable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_invocable_r",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_invocable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_invocable_r",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "invoke_result",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_abstract",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_aggregate",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_floating_point",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_arithmetic",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_bounded_array",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_standard_layout",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivial",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_null_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_fundamental",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_compound",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_copy_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_default_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_destructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_empty",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_enum",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_member_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_move_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_move_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_Lazy",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_convertible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_copy_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_copy_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_default_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_scalar",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_destructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_move_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_union",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_object",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_pod",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "underlying_type",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_signed",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_swappable_with",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_swappable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_swappable_with",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_nothrow_swappable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_copy_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_copy_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_copyable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_default_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_destructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_move_assignable",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_trivially_move_constructible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_unbounded_array",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "is_unsigned",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "make_signed",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "make_unsigned",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_Not",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "negation",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "rank",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "remove_pointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "type_identity",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "decay",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "unwrap_reference",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "unwrap_ref_decay",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "pointer_traits",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_HasToAddress",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_HasArrow",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_IsFancyPointer",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "numeric_limits",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "max",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE3maxB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 459,
                  "column": 61
                },
                "end": {
                  "line": 459,
                  "column": 64
                }
              }
            },
            {
              "funcName": "lowest",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE6lowestB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 460,
                  "column": 61
                },
                "end": {
                  "line": 460,
                  "column": 67
                }
              }
            },
            {
              "funcName": "epsilon",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE7epsilonB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 469,
                  "column": 61
                },
                "end": {
                  "line": 469,
                  "column": 68
                }
              }
            },
            {
              "funcName": "round_error",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE11round_errorB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 470,
                  "column": 61
                },
                "end": {
                  "line": 470,
                  "column": 72
                }
              }
            },
            {
              "funcName": "infinity",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE8infinityB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 482,
                  "column": 61
                },
                "end": {
                  "line": 482,
                  "column": 69
                }
              }
            },
            {
              "funcName": "quiet_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE9quiet_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 483,
                  "column": 61
                },
                "end": {
                  "line": 483,
                  "column": 70
                }
              }
            },
            {
              "funcName": "signaling_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE13signaling_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 484,
                  "column": 61
                },
                "end": {
                  "line": 484,
                  "column": 74
                }
              }
            },
            {
              "funcName": "denorm_min",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE10denorm_minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 485,
                  "column": 61
                },
                "end": {
                  "line": 485,
                  "column": 71
                }
              }
            },
            {
              "funcName": "max",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE3maxB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 459,
                  "column": 61
                },
                "end": {
                  "line": 459,
                  "column": 64
                }
              }
            },
            {
              "funcName": "lowest",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE6lowestB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 460,
                  "column": 61
                },
                "end": {
                  "line": 460,
                  "column": 67
                }
              }
            },
            {
              "funcName": "epsilon",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE7epsilonB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 469,
                  "column": 61
                },
                "end": {
                  "line": 469,
                  "column": 68
                }
              }
            },
            {
              "funcName": "round_error",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE11round_errorB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 470,
                  "column": 61
                },
                "end": {
                  "line": 470,
                  "column": 72
                }
              }
            },
            {
              "funcName": "infinity",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE8infinityB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 482,
                  "column": 61
                },
                "end": {
                  "line": 482,
                  "column": 69
                }
              }
            },
            {
              "funcName": "quiet_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE9quiet_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 483,
                  "column": 61
                },
                "end": {
                  "line": 483,
                  "column": 70
                }
              }
            },
            {
              "funcName": "signaling_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE13signaling_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 484,
                  "column": 61
                },
                "end": {
                  "line": 484,
                  "column": 74
                }
              }
            },
            {
              "funcName": "denorm_min",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE10denorm_minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 485,
                  "column": 61
                },
                "end": {
                  "line": 485,
                  "column": 71
                }
              }
            },
            {
              "funcName": "min",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE3minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 458,
                  "column": 61
                },
                "end": {
                  "line": 458,
                  "column": 64
                }
              }
            },
            {
              "funcName": "lowest",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE6lowestB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 460,
                  "column": 61
                },
                "end": {
                  "line": 460,
                  "column": 67
                }
              }
            },
            {
              "funcName": "epsilon",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE7epsilonB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 469,
                  "column": 61
                },
                "end": {
                  "line": 469,
                  "column": 68
                }
              }
            },
            {
              "funcName": "round_error",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE11round_errorB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 470,
                  "column": 61
                },
                "end": {
                  "line": 470,
                  "column": 72
                }
              }
            },
            {
              "funcName": "infinity",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE8infinityB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 482,
                  "column": 61
                },
                "end": {
                  "line": 482,
                  "column": 69
                }
              }
            },
            {
              "funcName": "quiet_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE9quiet_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 483,
                  "column": 61
                },
                "end": {
                  "line": 483,
                  "column": 70
                }
              }
            },
            {
              "funcName": "signaling_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE13signaling_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 484,
                  "column": 61
                },
                "end": {
                  "line": 484,
                  "column": 74
                }
              }
            },
            {
              "funcName": "denorm_min",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE10denorm_minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 485,
                  "column": 61
                },
                "end": {
                  "line": 485,
                  "column": 71
                }
              }
            },
            {
              "funcName": "min",
              "funcAstName": "__ZNSt3__114numeric_limitsItE3minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 458,
                  "column": 61
                },
                "end": {
                  "line": 458,
                  "column": 64
                }
              }
            },
            {
              "funcName": "lowest",
              "funcAstName": "__ZNSt3__114numeric_limitsItE6lowestB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 460,
                  "column": 61
                },
                "end": {
                  "line": 460,
                  "column": 67
                }
              }
            },
            {
              "funcName": "epsilon",
              "funcAstName": "__ZNSt3__114numeric_limitsItE7epsilonB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 469,
                  "column": 61
                },
                "end": {
                  "line": 469,
                  "column": 68
                }
              }
            },
            {
              "funcName": "round_error",
              "funcAstName": "__ZNSt3__114numeric_limitsItE11round_errorB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 470,
                  "column": 61
                },
                "end": {
                  "line": 470,
                  "column": 72
                }
              }
            },
            {
              "funcName": "infinity",
              "funcAstName": "__ZNSt3__114numeric_limitsItE8infinityB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 482,
                  "column": 61
                },
                "end": {
                  "line": 482,
                  "column": 69
                }
              }
            },
            {
              "funcName": "quiet_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsItE9quiet_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 483,
                  "column": 61
                },
                "end": {
                  "line": 483,
                  "column": 70
                }
              }
            },
            {
              "funcName": "signaling_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsItE13signaling_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 484,
                  "column": 61
                },
                "end": {
                  "line": 484,
                  "column": 74
                }
              }
            },
            {
              "funcName": "denorm_min",
              "funcAstName": "__ZNSt3__114numeric_limitsItE10denorm_minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 485,
                  "column": 61
                },
                "end": {
                  "line": 485,
                  "column": 71
                }
              }
            },
            {
              "funcName": "min",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE3minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 458,
                  "column": 61
                },
                "end": {
                  "line": 458,
                  "column": 64
                }
              }
            },
            {
              "funcName": "lowest",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE6lowestB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 460,
                  "column": 61
                },
                "end": {
                  "line": 460,
                  "column": 67
                }
              }
            },
            {
              "funcName": "epsilon",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE7epsilonB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 469,
                  "column": 61
                },
                "end": {
                  "line": 469,
                  "column": 68
                }
              }
            },
            {
              "funcName": "round_error",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE11round_errorB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 470,
                  "column": 61
                },
                "end": {
                  "line": 470,
                  "column": 72
                }
              }
            },
            {
              "funcName": "infinity",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE8infinityB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 482,
                  "column": 61
                },
                "end": {
                  "line": 482,
                  "column": 69
                }
              }
            },
            {
              "funcName": "quiet_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE9quiet_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 483,
                  "column": 61
                },
                "end": {
                  "line": 483,
                  "column": 70
                }
              }
            },
            {
              "funcName": "signaling_NaN",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE13signaling_NaNB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 484,
                  "column": 61
                },
                "end": {
                  "line": 484,
                  "column": 74
                }
              }
            },
            {
              "funcName": "denorm_min",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE10denorm_minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 485,
                  "column": 61
                },
                "end": {
                  "line": 485,
                  "column": 71
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "min",
              "funcAstName": "__ZNSt3__114numeric_limitsIiE3minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 458,
                  "column": 61
                },
                "end": {
                  "line": 458,
                  "column": 64
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "min",
              "funcAstName": "__ZNSt3__114numeric_limitsIxE3minB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 458,
                  "column": 61
                },
                "end": {
                  "line": 458,
                  "column": 64
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "max",
              "funcAstName": "__ZNSt3__114numeric_limitsIhE3maxB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 459,
                  "column": 61
                },
                "end": {
                  "line": 459,
                  "column": 64
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "max",
              "funcAstName": "__ZNSt3__114numeric_limitsItE3maxB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 459,
                  "column": 61
                },
                "end": {
                  "line": 459,
                  "column": 64
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "max",
              "funcAstName": "__ZNSt3__114numeric_limitsIlE3maxB8ue170006Ev",
              "qualType": "type () noexcept",
              "range": {
                "start": {
                  "line": 459,
                  "column": 61
                },
                "end": {
                  "line": 459,
                  "column": 64
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "allocator_traits",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "allocator",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "allocate",
              "funcAstName": "__ZNSt3__19allocatorINS_19__for_overwrite_tagEE8allocateB8ue170006Em",
              "qualType": "std::__for_overwrite_tag *(size_t)",
              "range": {
                "start": {
                  "line": 108,
                  "column": 10
                },
                "end": {
                  "line": 108,
                  "column": 18
                }
              }
            },
            {
              "funcName": "deallocate",
              "funcAstName": "__ZNSt3__19allocatorINS_19__for_overwrite_tagEE10deallocateB8ue170006EPS1_m",
              "qualType": "void (std::__for_overwrite_tag *, size_t) noexcept",
              "range": {
                "start": {
                  "line": 126,
                  "column": 10
                },
                "end": {
                  "line": 126,
                  "column": 20
                }
              }
            }
          ],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "uses_allocator",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "allocator_arg_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "array",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "incrementable_traits",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "iterator_traits",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "indirectly_readable_traits",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "input_iterator_tag",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "output_iterator_tag",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "forward_iterator_tag",
          "parentClasses": [
            "input_iterator_tag"
          ],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "bidirectional_iterator_tag",
          "parentClasses": [
            "forward_iterator_tag"
          ],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "random_access_iterator_tag",
          "parentClasses": [
            "bidirectional_iterator_tag"
          ],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "contiguous_iterator_tag",
          "parentClasses": [
            "random_access_iterator_tag"
          ],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "subrange",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "tuple",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "integer_sequence",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "size",
              "funcAstName": "__ZNSt3__116integer_sequenceImJEE4sizeB8ue170006Ev",
              "qualType": "size_t () noexcept",
              "range": {
                "start": {
                  "line": 100,
                  "column": 5
                },
                "end": {
                  "line": 100,
                  "column": 9
                }
              }
            }
          ],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "tuple_element",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "piecewise_construct_t",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "view_base",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "view_interface",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "terminate",
          "funcAstName": "__ZSt9terminatev",
          "qualType": "void () noexcept",
          "range": {
            "start": {
              "line": 19,
              "column": 49
            },
            "end": {
              "line": 19,
              "column": 58
            }
          }
        },
        {
          "funcName": "iter_move",
          "funcAstName": "__ZNSt3__16ranges11__iter_move9iter_moveEv",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 38,
              "column": 15
            }
          }
        }
      ],
      "funcImpls": [
        {
          "funcName": "is_constant_evaluated",
          "funcAstName": "__ZNSt3__121is_constant_evaluatedB8ue170006Ev",
          "qualType": "bool () noexcept",
          "range": {
            "start": {
              "line": 21,
              "column": 49
            },
            "end": {
              "line": 21,
              "column": 70
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_is_constant_evaluated",
          "funcAstName": "__ZNSt3__130__libcpp_is_constant_evaluatedB8ue170006Ev",
          "qualType": "bool () noexcept",
          "range": {
            "start": {
              "line": 26,
              "column": 53
            },
            "end": {
              "line": 26,
              "column": 83
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "swap",
          "funcAstName": "__ZNSt3__14swapB8ue170006ImEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS2_EE5valueEvE4typeERS2_S5_",
          "qualType": "__swap_result_t<unsigned long> (unsigned long &, unsigned long &) noexcept(is_nothrow_move_constructible<unsigned long>::value && is_nothrow_move_assignable<unsigned long>::value)",
          "range": {
            "start": {
              "line": 40,
              "column": 85
            },
            "end": {
              "line": 40,
              "column": 89
            }
          },
          "funcCalls": [
            {
              "funcName": "move",
              "funcAstName": "__ZNSt3__14moveB8ue170006IRmEEOu20__remove_reference_tIT_EOS2_",
              "qualType": "__libcpp_remove_reference_t<unsigned long &> &&(unsigned long &) noexcept",
              "range": {
                "start": {
                  "line": 42,
                  "column": -1
                },
                "end": {
                  "line": 42,
                  "column": 27
                }
              }
            },
            {
              "funcName": "move",
              "funcAstName": "__ZNSt3__14moveB8ue170006IRmEEOu20__remove_reference_tIT_EOS2_",
              "qualType": "__libcpp_remove_reference_t<unsigned long &> &&(unsigned long &) noexcept",
              "range": {
                "start": {
                  "line": 43,
                  "column": -1
                },
                "end": {
                  "line": 43,
                  "column": 25
                }
              }
            },
            {
              "funcName": "move",
              "funcAstName": "__ZNSt3__14moveB8ue170006IRmEEOu20__remove_reference_tIT_EOS2_",
              "qualType": "__libcpp_remove_reference_t<unsigned long &> &&(unsigned long &) noexcept",
              "range": {
                "start": {
                  "line": 44,
                  "column": -1
                },
                "end": {
                  "line": 44,
                  "column": 25
                }
              }
            }
          ],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/exception"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/initializer_list",
      "lastAnalyzed": 1725057898836,
      "classes": [
        {
          "name": "initializer_list",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "size",
              "funcAstName": "__ZNKSt16initializer_listINSt3__116__variant_detail6_TraitEE4sizeB8ue170006Ev",
              "qualType": "size_t () const noexcept",
              "range": {
                "start": {
                  "line": 85,
                  "column": 15
                },
                "end": {
                  "line": 85,
                  "column": 19
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "begin",
              "funcAstName": "__ZNKSt16initializer_listINSt3__116__variant_detail6_TraitEE5beginB8ue170006Ev",
              "qualType": "const std::__variant_detail::_Trait *() const noexcept",
              "range": {
                "start": {
                  "line": 89,
                  "column": 16
                },
                "end": {
                  "line": 89,
                  "column": 21
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "end",
              "funcAstName": "__ZNKSt16initializer_listINSt3__116__variant_detail6_TraitEE3endB8ue170006Ev",
              "qualType": "const std::__variant_detail::_Trait *() const noexcept",
              "range": {
                "start": {
                  "line": 93,
                  "column": 16
                },
                "end": {
                  "line": 93,
                  "column": 19
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "dangling",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "in_out_result",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_IterOps",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_RangeAlgPolicy",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_ClassicAlgPolicy",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "partial_ordering",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [
            {
              "funcName": "__is_ordered",
              "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
              "qualType": "bool () const noexcept",
              "range": {
                "start": {
                  "line": 62,
                  "column": 18
                },
                "end": {
                  "line": 62,
                  "column": 30
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator==",
              "funcAstName": "__ZNSt3__1eqB8ue170006ENS_16partial_orderingES0_",
              "qualType": "bool (partial_ordering, partial_ordering) noexcept",
              "range": {
                "start": {
                  "line": 74,
                  "column": 25
                },
                "end": {
                  "line": 74,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator==",
              "funcAstName": "__ZNSt3__1eqB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 77,
                  "column": 25
                },
                "end": {
                  "line": 77,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 78,
                      "column": 12
                    },
                    "end": {
                      "line": 78,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<",
              "funcAstName": "__ZNSt3__1ltB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 82,
                  "column": 25
                },
                "end": {
                  "line": 82,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 83,
                      "column": 12
                    },
                    "end": {
                      "line": 83,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=",
              "funcAstName": "__ZNSt3__1leB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 87,
                  "column": 25
                },
                "end": {
                  "line": 87,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 88,
                      "column": 12
                    },
                    "end": {
                      "line": 88,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>",
              "funcAstName": "__ZNSt3__1gtB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 92,
                  "column": 25
                },
                "end": {
                  "line": 92,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 93,
                      "column": 12
                    },
                    "end": {
                      "line": 93,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>=",
              "funcAstName": "__ZNSt3__1geB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 97,
                  "column": 25
                },
                "end": {
                  "line": 97,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 98,
                      "column": 12
                    },
                    "end": {
                      "line": 98,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<",
              "funcAstName": "__ZNSt3__1ltB8ue170006ENS_20_CmpUnspecifiedParamENS_16partial_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, partial_ordering) noexcept",
              "range": {
                "start": {
                  "line": 102,
                  "column": 25
                },
                "end": {
                  "line": 102,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 103,
                      "column": 12
                    },
                    "end": {
                      "line": 103,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=",
              "funcAstName": "__ZNSt3__1leB8ue170006ENS_20_CmpUnspecifiedParamENS_16partial_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, partial_ordering) noexcept",
              "range": {
                "start": {
                  "line": 107,
                  "column": 25
                },
                "end": {
                  "line": 107,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 108,
                      "column": 12
                    },
                    "end": {
                      "line": 108,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>",
              "funcAstName": "__ZNSt3__1gtB8ue170006ENS_20_CmpUnspecifiedParamENS_16partial_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, partial_ordering) noexcept",
              "range": {
                "start": {
                  "line": 112,
                  "column": 25
                },
                "end": {
                  "line": 112,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 113,
                      "column": 12
                    },
                    "end": {
                      "line": 113,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>=",
              "funcAstName": "__ZNSt3__1geB8ue170006ENS_20_CmpUnspecifiedParamENS_16partial_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, partial_ordering) noexcept",
              "range": {
                "start": {
                  "line": 117,
                  "column": 25
                },
                "end": {
                  "line": 117,
                  "column": 33
                }
              },
              "funcCalls": [
                {
                  "funcName": "__is_ordered",
                  "funcAstName": "__ZNKSt3__116partial_ordering12__is_orderedB8ue170006Ev",
                  "qualType": "bool () const noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=>",
              "funcAstName": "__ZNSt3__1ssB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "partial_ordering (partial_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 122,
                  "column": 37
                },
                "end": {
                  "line": 122,
                  "column": 45
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=>",
              "funcAstName": "__ZNSt3__1ssB8ue170006ENS_20_CmpUnspecifiedParamENS_16partial_orderingE",
              "qualType": "partial_ordering (_CmpUnspecifiedParam, partial_ordering) noexcept",
              "range": {
                "start": {
                  "line": 127,
                  "column": 37
                },
                "end": {
                  "line": 127,
                  "column": 45
                }
              },
              "funcCalls": [
                {
                  "funcName": "operator<",
                  "funcAstName": "__ZNSt3__1ltB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
                  "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                },
                {
                  "funcName": "operator>",
                  "funcAstName": "__ZNSt3__1gtB8ue170006ENS_16partial_orderingENS_20_CmpUnspecifiedParamE",
                  "qualType": "bool (partial_ordering, _CmpUnspecifiedParam) noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "weak_ordering",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator==",
              "funcAstName": "__ZNSt3__1eqB8ue170006ENS_13weak_orderingES0_",
              "qualType": "bool (weak_ordering, weak_ordering) noexcept",
              "range": {
                "start": {
                  "line": 158,
                  "column": 25
                },
                "end": {
                  "line": 158,
                  "column": 33
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator==",
              "funcAstName": "__ZNSt3__1eqB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 161,
                  "column": 25
                },
                "end": {
                  "line": 161,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<",
              "funcAstName": "__ZNSt3__1ltB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 166,
                  "column": 25
                },
                "end": {
                  "line": 166,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=",
              "funcAstName": "__ZNSt3__1leB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 171,
                  "column": 25
                },
                "end": {
                  "line": 171,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>",
              "funcAstName": "__ZNSt3__1gtB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 176,
                  "column": 25
                },
                "end": {
                  "line": 176,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>=",
              "funcAstName": "__ZNSt3__1geB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 181,
                  "column": 25
                },
                "end": {
                  "line": 181,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<",
              "funcAstName": "__ZNSt3__1ltB8ue170006ENS_20_CmpUnspecifiedParamENS_13weak_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, weak_ordering) noexcept",
              "range": {
                "start": {
                  "line": 186,
                  "column": 25
                },
                "end": {
                  "line": 186,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=",
              "funcAstName": "__ZNSt3__1leB8ue170006ENS_20_CmpUnspecifiedParamENS_13weak_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, weak_ordering) noexcept",
              "range": {
                "start": {
                  "line": 191,
                  "column": 25
                },
                "end": {
                  "line": 191,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>",
              "funcAstName": "__ZNSt3__1gtB8ue170006ENS_20_CmpUnspecifiedParamENS_13weak_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, weak_ordering) noexcept",
              "range": {
                "start": {
                  "line": 196,
                  "column": 25
                },
                "end": {
                  "line": 196,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>=",
              "funcAstName": "__ZNSt3__1geB8ue170006ENS_20_CmpUnspecifiedParamENS_13weak_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, weak_ordering) noexcept",
              "range": {
                "start": {
                  "line": 201,
                  "column": 25
                },
                "end": {
                  "line": 201,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=>",
              "funcAstName": "__ZNSt3__1ssB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "weak_ordering (weak_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 206,
                  "column": 34
                },
                "end": {
                  "line": 206,
                  "column": 42
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=>",
              "funcAstName": "__ZNSt3__1ssB8ue170006ENS_20_CmpUnspecifiedParamENS_13weak_orderingE",
              "qualType": "weak_ordering (_CmpUnspecifiedParam, weak_ordering) noexcept",
              "range": {
                "start": {
                  "line": 211,
                  "column": 34
                },
                "end": {
                  "line": 211,
                  "column": 42
                }
              },
              "funcCalls": [
                {
                  "funcName": "operator<",
                  "funcAstName": "__ZNSt3__1ltB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
                  "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                },
                {
                  "funcName": "operator>",
                  "funcAstName": "__ZNSt3__1gtB8ue170006ENS_13weak_orderingENS_20_CmpUnspecifiedParamE",
                  "qualType": "bool (weak_ordering, _CmpUnspecifiedParam) noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "strong_ordering",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator==",
              "funcAstName": "__ZNSt3__1eqB8ue170006ENS_15strong_orderingES0_",
              "qualType": "bool (strong_ordering, strong_ordering) noexcept",
              "range": {
                "start": {
                  "line": 250,
                  "column": 25
                },
                "end": {
                  "line": 250,
                  "column": 33
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator==",
              "funcAstName": "__ZNSt3__1eqB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 253,
                  "column": 25
                },
                "end": {
                  "line": 253,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<",
              "funcAstName": "__ZNSt3__1ltB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 258,
                  "column": 25
                },
                "end": {
                  "line": 258,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=",
              "funcAstName": "__ZNSt3__1leB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 263,
                  "column": 25
                },
                "end": {
                  "line": 263,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>",
              "funcAstName": "__ZNSt3__1gtB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 268,
                  "column": 25
                },
                "end": {
                  "line": 268,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>=",
              "funcAstName": "__ZNSt3__1geB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 273,
                  "column": 25
                },
                "end": {
                  "line": 273,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<",
              "funcAstName": "__ZNSt3__1ltB8ue170006ENS_20_CmpUnspecifiedParamENS_15strong_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, strong_ordering) noexcept",
              "range": {
                "start": {
                  "line": 278,
                  "column": 25
                },
                "end": {
                  "line": 278,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=",
              "funcAstName": "__ZNSt3__1leB8ue170006ENS_20_CmpUnspecifiedParamENS_15strong_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, strong_ordering) noexcept",
              "range": {
                "start": {
                  "line": 283,
                  "column": 25
                },
                "end": {
                  "line": 283,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>",
              "funcAstName": "__ZNSt3__1gtB8ue170006ENS_20_CmpUnspecifiedParamENS_15strong_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, strong_ordering) noexcept",
              "range": {
                "start": {
                  "line": 288,
                  "column": 25
                },
                "end": {
                  "line": 288,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator>=",
              "funcAstName": "__ZNSt3__1geB8ue170006ENS_20_CmpUnspecifiedParamENS_15strong_orderingE",
              "qualType": "bool (_CmpUnspecifiedParam, strong_ordering) noexcept",
              "range": {
                "start": {
                  "line": 293,
                  "column": 25
                },
                "end": {
                  "line": 293,
                  "column": 33
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=>",
              "funcAstName": "__ZNSt3__1ssB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
              "qualType": "strong_ordering (strong_ordering, _CmpUnspecifiedParam) noexcept",
              "range": {
                "start": {
                  "line": 298,
                  "column": 36
                },
                "end": {
                  "line": 298,
                  "column": 44
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "operator<=>",
              "funcAstName": "__ZNSt3__1ssB8ue170006ENS_20_CmpUnspecifiedParamENS_15strong_orderingE",
              "qualType": "strong_ordering (_CmpUnspecifiedParam, strong_ordering) noexcept",
              "range": {
                "start": {
                  "line": 303,
                  "column": 36
                },
                "end": {
                  "line": 303,
                  "column": 44
                }
              },
              "funcCalls": [
                {
                  "funcName": "operator<",
                  "funcAstName": "__ZNSt3__1ltB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
                  "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                },
                {
                  "funcName": "operator>",
                  "funcAstName": "__ZNSt3__1gtB8ue170006ENS_15strong_orderingENS_20_CmpUnspecifiedParamE",
                  "qualType": "bool (strong_ordering, _CmpUnspecifiedParam) noexcept",
                  "range": {
                    "start": {
                      "line": 118,
                      "column": 12
                    },
                    "end": {
                      "line": 118,
                      "column": 30
                    }
                  }
                }
              ],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_CmpUnspecifiedParam",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "common_comparison_category",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "tuple_size",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "pair",
          "parentClasses": [],
          "classes": [
            {
              "name": "_CheckArgs",
              "parentClasses": [],
              "classes": [],
              "funcDecls": [],
              "funcImpls": [],
              "virtualFuncDecls": [],
              "virtualFuncImpls": []
            }
          ],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "identity",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "compare_three_way_result",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "iterator",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "view_interface",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "subrange",
          "parentClasses": [],
          "classes": [
            {
              "name": "_Empty",
              "parentClasses": [],
              "classes": [],
              "funcDecls": [],
              "funcImpls": [],
              "virtualFuncDecls": [],
              "virtualFuncImpls": []
            }
          ],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "reverse_iterator",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_AllocatorDestroyRangeReverse",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "compare_three_way",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "plus",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "minus",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "multiplies",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "divides",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "modulus",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "negate",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "bit_and",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "bit_not",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "bit_or",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "bit_xor",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "equal_to",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "not_equal_to",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "less",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "less_equal",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "greater_equal",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "greater",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "logical_and",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "logical_not",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "logical_or",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "reference_wrapper",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [
        {
          "funcName": "memchr",
          "funcAstName": "_memchr",
          "qualType": "void *(const void *, int, size_t)",
          "range": {
            "start": {
              "line": 70,
              "column": 7
            },
            "end": {
              "line": 70,
              "column": 13
            }
          }
        },
        {
          "funcName": "memcmp",
          "funcAstName": "_memcmp",
          "qualType": "int (const void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 12
            }
          }
        },
        {
          "funcName": "memcpy",
          "funcAstName": "_memcpy",
          "qualType": "void *(void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 72,
              "column": 7
            },
            "end": {
              "line": 72,
              "column": 13
            }
          }
        },
        {
          "funcName": "memmove",
          "funcAstName": "_memmove",
          "qualType": "void *(void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 73,
              "column": 7
            },
            "end": {
              "line": 73,
              "column": 14
            }
          }
        },
        {
          "funcName": "memset",
          "funcAstName": "_memset",
          "qualType": "void *(void *, int, size_t)",
          "range": {
            "start": {
              "line": 74,
              "column": 7
            },
            "end": {
              "line": 74,
              "column": 13
            }
          }
        },
        {
          "funcName": "strcat",
          "funcAstName": "_strcat",
          "qualType": "char *(char *, const char *)",
          "range": {
            "start": {
              "line": 75,
              "column": 7
            },
            "end": {
              "line": 75,
              "column": 13
            }
          }
        },
        {
          "funcName": "strchr",
          "funcAstName": "_strchr",
          "qualType": "char *(const char *, int)",
          "range": {
            "start": {
              "line": 76,
              "column": 7
            },
            "end": {
              "line": 76,
              "column": 13
            }
          }
        },
        {
          "funcName": "strcmp",
          "funcAstName": "_strcmp",
          "qualType": "int (const char *, const char *)",
          "range": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 12
            }
          }
        },
        {
          "funcName": "strcoll",
          "funcAstName": "_strcoll",
          "qualType": "int (const char *, const char *)",
          "range": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 13
            }
          }
        },
        {
          "funcName": "strcpy",
          "funcAstName": "_strcpy",
          "qualType": "char *(char *, const char *)",
          "range": {
            "start": {
              "line": 79,
              "column": 7
            },
            "end": {
              "line": 79,
              "column": 13
            }
          }
        },
        {
          "funcName": "strcspn",
          "funcAstName": "_strcspn",
          "qualType": "size_t (const char *, const char *)",
          "range": {
            "start": {
              "line": 80,
              "column": 9
            },
            "end": {
              "line": 80,
              "column": 16
            }
          }
        },
        {
          "funcName": "strerror",
          "funcAstName": "_strerror",
          "qualType": "char *(int)",
          "range": {
            "start": {
              "line": 81,
              "column": 7
            },
            "end": {
              "line": 81,
              "column": 15
            }
          }
        },
        {
          "funcName": "strlen",
          "funcAstName": "_strlen",
          "qualType": "size_t (const char *)",
          "range": {
            "start": {
              "line": 82,
              "column": 9
            },
            "end": {
              "line": 82,
              "column": 15
            }
          }
        },
        {
          "funcName": "strncat",
          "funcAstName": "_strncat",
          "qualType": "char *(char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 83,
              "column": 7
            },
            "end": {
              "line": 83,
              "column": 14
            }
          }
        },
        {
          "funcName": "strncmp",
          "funcAstName": "_strncmp",
          "qualType": "int (const char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 13
            }
          }
        },
        {
          "funcName": "strncpy",
          "funcAstName": "_strncpy",
          "qualType": "char *(char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 85,
              "column": 7
            },
            "end": {
              "line": 85,
              "column": 14
            }
          }
        },
        {
          "funcName": "strpbrk",
          "funcAstName": "_strpbrk",
          "qualType": "char *(const char *, const char *)",
          "range": {
            "start": {
              "line": 86,
              "column": 7
            },
            "end": {
              "line": 86,
              "column": 14
            }
          }
        },
        {
          "funcName": "strrchr",
          "funcAstName": "_strrchr",
          "qualType": "char *(const char *, int)",
          "range": {
            "start": {
              "line": 87,
              "column": 7
            },
            "end": {
              "line": 87,
              "column": 14
            }
          }
        },
        {
          "funcName": "strspn",
          "funcAstName": "_strspn",
          "qualType": "size_t (const char *, const char *)",
          "range": {
            "start": {
              "line": 88,
              "column": 9
            },
            "end": {
              "line": 88,
              "column": 15
            }
          }
        },
        {
          "funcName": "strstr",
          "funcAstName": "_strstr",
          "qualType": "char *(const char *, const char *)",
          "range": {
            "start": {
              "line": 89,
              "column": 7
            },
            "end": {
              "line": 89,
              "column": 13
            }
          }
        },
        {
          "funcName": "strtok",
          "funcAstName": "_strtok",
          "qualType": "char *(char *, const char *)",
          "range": {
            "start": {
              "line": 90,
              "column": 7
            },
            "end": {
              "line": 90,
              "column": 13
            }
          }
        },
        {
          "funcName": "strxfrm",
          "funcAstName": "_strxfrm",
          "qualType": "size_t (char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 91,
              "column": 9
            },
            "end": {
              "line": 91,
              "column": 16
            }
          }
        },
        {
          "funcName": "strtok_r",
          "funcAstName": "_strtok_r",
          "qualType": "char *(char *, const char *, char **)",
          "range": {
            "start": {
              "line": 104,
              "column": 7
            },
            "end": {
              "line": 104,
              "column": 15
            }
          }
        },
        {
          "funcName": "strerror_r",
          "funcAstName": "_strerror_r",
          "qualType": "int (int, char *, size_t)",
          "range": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 16
            }
          }
        },
        {
          "funcName": "strdup",
          "funcAstName": "_strdup",
          "qualType": "char *(const char *)",
          "range": {
            "start": {
              "line": 117,
              "column": 7
            },
            "end": {
              "line": 117,
              "column": 13
            }
          }
        },
        {
          "funcName": "memccpy",
          "funcAstName": "_memccpy",
          "qualType": "void *(void *, const void *, int, size_t)",
          "range": {
            "start": {
              "line": 118,
              "column": 7
            },
            "end": {
              "line": 118,
              "column": 14
            }
          }
        },
        {
          "funcName": "stpcpy",
          "funcAstName": "_stpcpy",
          "qualType": "char *(char *, const char *)",
          "range": {
            "start": {
              "line": 130,
              "column": 7
            },
            "end": {
              "line": 130,
              "column": 13
            }
          }
        },
        {
          "funcName": "stpncpy",
          "funcAstName": "_stpncpy",
          "qualType": "char *(char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 131,
              "column": 17
            }
          }
        },
        {
          "funcName": "strndup",
          "funcAstName": "_strndup",
          "qualType": "char *(const char *, size_t)",
          "range": {
            "start": {
              "line": 132,
              "column": 7
            },
            "end": {
              "line": 132,
              "column": 14
            }
          }
        },
        {
          "funcName": "strnlen",
          "funcAstName": "_strnlen",
          "qualType": "size_t (const char *, size_t)",
          "range": {
            "start": {
              "line": 133,
              "column": 10
            },
            "end": {
              "line": 133,
              "column": 17
            }
          }
        },
        {
          "funcName": "strsignal",
          "funcAstName": "_strsignal",
          "qualType": "char *(int)",
          "range": {
            "start": {
              "line": 134,
              "column": 7
            },
            "end": {
              "line": 134,
              "column": 16
            }
          }
        }
      ],
      "funcImpls": [
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006Ei",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 25,
              "column": 5
            },
            "end": {
              "line": 25,
              "column": 26
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006Ej",
          "qualType": "unsigned int (unsigned int)",
          "range": {
            "start": {
              "line": 28,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 31
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006El",
          "qualType": "long (long)",
          "range": {
            "start": {
              "line": 31,
              "column": 6
            },
            "end": {
              "line": 31,
              "column": 27
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006Em",
          "qualType": "unsigned long (unsigned long)",
          "range": {
            "start": {
              "line": 34,
              "column": 15
            },
            "end": {
              "line": 34,
              "column": 36
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006Ex",
          "qualType": "long long (long long)",
          "range": {
            "start": {
              "line": 37,
              "column": 11
            },
            "end": {
              "line": 37,
              "column": 32
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006Ey",
          "qualType": "unsigned long long (unsigned long long)",
          "range": {
            "start": {
              "line": 40,
              "column": 20
            },
            "end": {
              "line": 40,
              "column": 41
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006En",
          "qualType": "__int128_t (__int128_t)",
          "range": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 49,
              "column": 33
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__convert_to_integral",
          "funcAstName": "__ZNSt3__121__convert_to_integralB8ue170006Eo",
          "qualType": "__uint128_t (__uint128_t)",
          "range": {
            "start": {
              "line": 52,
              "column": 13
            },
            "end": {
              "line": 52,
              "column": 34
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__libcpp_unreachable",
          "funcAstName": "__ZNSt3__120__libcpp_unreachableB8ue170006Ev",
          "qualType": "void ()",
          "range": {
            "start": {
              "line": 21,
              "column": 52
            },
            "end": {
              "line": 21,
              "column": 72
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__type_to_enum",
          "funcAstName": "__ZNSt3__113__comp_detail14__type_to_enumB8ue170006INS_15strong_orderingEEENS0_21_ClassifyCompCategoryEv",
          "qualType": "_ClassifyCompCategory () noexcept",
          "range": {
            "start": {
              "line": 37,
              "column": 33
            },
            "end": {
              "line": 37,
              "column": 47
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__type_to_enum",
          "funcAstName": "__ZNSt3__113__comp_detail14__type_to_enumB8ue170006INS_16partial_orderingEEENS0_21_ClassifyCompCategoryEv",
          "qualType": "_ClassifyCompCategory () noexcept",
          "range": {
            "start": {
              "line": 37,
              "column": 33
            },
            "end": {
              "line": 37,
              "column": 47
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__compute_comp_type",
          "funcAstName": "__ZNSt3__113__comp_detail19__compute_comp_typeB8ue170006ILm3EEENS0_21_ClassifyCompCategoryERAT__KS2_",
          "qualType": "_ClassifyCompCategory (const _ClassifyCompCategory (&)[3])",
          "range": {
            "start": {
              "line": 50,
              "column": 1
            },
            "end": {
              "line": 50,
              "column": 20
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__get_comp_type",
          "funcAstName": "__ZNSt3__113__comp_detail15__get_comp_typeB8ue170006IJNS_15strong_orderingENS_16partial_orderingEELb0EEEDav",
          "qualType": "partial_ordering ()",
          "range": {
            "start": {
              "line": 65,
              "column": 16
            },
            "end": {
              "line": 65,
              "column": 31
            }
          },
          "funcCalls": [
            {
              "funcName": "__type_to_enum",
              "funcAstName": "__ZNSt3__113__comp_detail14__type_to_enumB8ue170006INS_15strong_orderingEEENS0_21_ClassifyCompCategoryEv",
              "qualType": "_ClassifyCompCategory () noexcept",
              "range": {
                "start": {
                  "line": 67,
                  "column": 48
                },
                "end": {
                  "line": 67,
                  "column": 69
                }
              }
            },
            {
              "funcName": "__type_to_enum",
              "funcAstName": "__ZNSt3__113__comp_detail14__type_to_enumB8ue170006INS_16partial_orderingEEENS0_21_ClassifyCompCategoryEv",
              "qualType": "_ClassifyCompCategory () noexcept",
              "range": {
                "start": {
                  "line": 67,
                  "column": 48
                },
                "end": {
                  "line": 67,
                  "column": 69
                }
              }
            },
            {
              "funcName": "__compute_comp_type",
              "funcAstName": "__ZNSt3__113__comp_detail19__compute_comp_typeB8ue170006ILm3EEENS0_21_ClassifyCompCategoryERAT__KS2_",
              "qualType": "_ClassifyCompCategory (const _ClassifyCompCategory (&)[3])",
              "range": {
                "start": {
                  "line": 68,
                  "column": 26
                },
                "end": {
                  "line": 68,
                  "column": 74
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__constexpr_strlen",
          "funcAstName": "__ZNSt3__118__constexpr_strlenB8ue170006EPKc",
          "qualType": "size_t (const char *)",
          "range": {
            "start": {
              "line": 38,
              "column": 67
            },
            "end": {
              "line": 38,
              "column": 85
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/__ranges/concepts.h"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/__ranges/concepts.h",
      "lastAnalyzed": 1725057898817,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/sys/_types/_ssize_t.h",
      "lastAnalyzed": 1725057898836,
      "classes": [],
      "funcDecls": [
        {
          "funcName": "memmem",
          "funcAstName": "_memmem",
          "qualType": "void *(const void *, size_t, const void *, size_t)",
          "range": {
            "start": {
              "line": 155,
              "column": 7
            },
            "end": {
              "line": 155,
              "column": 13
            }
          }
        },
        {
          "funcName": "memset_pattern4",
          "funcAstName": "_memset_pattern4",
          "qualType": "void (void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 156,
              "column": 25
            }
          }
        },
        {
          "funcName": "memset_pattern8",
          "funcAstName": "_memset_pattern8",
          "qualType": "void (void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 157,
              "column": 10
            },
            "end": {
              "line": 157,
              "column": 25
            }
          }
        },
        {
          "funcName": "memset_pattern16",
          "funcAstName": "_memset_pattern16",
          "qualType": "void (void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 158,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 26
            }
          }
        },
        {
          "funcName": "strcasestr",
          "funcAstName": "_strcasestr",
          "qualType": "char *(const char *, const char *)",
          "range": {
            "start": {
              "line": 160,
              "column": 7
            },
            "end": {
              "line": 160,
              "column": 17
            }
          }
        },
        {
          "funcName": "strnstr",
          "funcAstName": "_strnstr",
          "qualType": "char *(const char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 161,
              "column": 7
            },
            "end": {
              "line": 161,
              "column": 14
            }
          }
        },
        {
          "funcName": "strlcat",
          "funcAstName": "_strlcat",
          "qualType": "size_t (char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 162,
              "column": 9
            },
            "end": {
              "line": 162,
              "column": 16
            }
          }
        },
        {
          "funcName": "strlcpy",
          "funcAstName": "_strlcpy",
          "qualType": "size_t (char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 163,
              "column": 9
            },
            "end": {
              "line": 163,
              "column": 16
            }
          }
        },
        {
          "funcName": "strmode",
          "funcAstName": "_strmode",
          "qualType": "void (int, char *)",
          "range": {
            "start": {
              "line": 164,
              "column": 7
            },
            "end": {
              "line": 164,
              "column": 14
            }
          }
        },
        {
          "funcName": "strsep",
          "funcAstName": "_strsep",
          "qualType": "char *(char **, const char *)",
          "range": {
            "start": {
              "line": 165,
              "column": 7
            },
            "end": {
              "line": 165,
              "column": 13
            }
          }
        },
        {
          "funcName": "swab",
          "funcAstName": "_swab",
          "qualType": "void (const void *, void *, ssize_t)",
          "range": {
            "start": {
              "line": 168,
              "column": 7
            },
            "end": {
              "line": 168,
              "column": 11
            }
          }
        },
        {
          "funcName": "timingsafe_bcmp",
          "funcAstName": "_timingsafe_bcmp",
          "qualType": "int (const void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 172,
              "column": 5
            },
            "end": {
              "line": 172,
              "column": 20
            }
          }
        },
        {
          "funcName": "strsignal_r",
          "funcAstName": "_strsignal_r",
          "qualType": "int (int, char *, size_t)",
          "range": {
            "start": {
              "line": 176,
              "column": 7
            },
            "end": {
              "line": 176,
              "column": 18
            }
          }
        },
        {
          "funcName": "bcmp",
          "funcAstName": "_bcmp",
          "qualType": "int (const void *, const void *, size_t)",
          "range": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 10
            }
          }
        },
        {
          "funcName": "bcopy",
          "funcAstName": "_bcopy",
          "qualType": "void (const void *, void *, size_t)",
          "range": {
            "start": {
              "line": 71,
              "column": 7
            },
            "end": {
              "line": 71,
              "column": 12
            }
          }
        },
        {
          "funcName": "bzero",
          "funcAstName": "_bzero",
          "qualType": "void (void *, size_t)",
          "range": {
            "start": {
              "line": 72,
              "column": 7
            },
            "end": {
              "line": 72,
              "column": 12
            }
          }
        },
        {
          "funcName": "index",
          "funcAstName": "_index",
          "qualType": "char *(const char *, int)",
          "range": {
            "start": {
              "line": 73,
              "column": 7
            },
            "end": {
              "line": 73,
              "column": 12
            }
          }
        },
        {
          "funcName": "rindex",
          "funcAstName": "_rindex",
          "qualType": "char *(const char *, int)",
          "range": {
            "start": {
              "line": 74,
              "column": 7
            },
            "end": {
              "line": 74,
              "column": 13
            }
          }
        },
        {
          "funcName": "ffs",
          "funcAstName": "_ffs",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 9
            }
          }
        },
        {
          "funcName": "strcasecmp",
          "funcAstName": "_strcasecmp",
          "qualType": "int (const char *, const char *)",
          "range": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 16
            }
          }
        },
        {
          "funcName": "strncasecmp",
          "funcAstName": "_strncasecmp",
          "qualType": "int (const char *, const char *, size_t)",
          "range": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 17
            }
          }
        },
        {
          "funcName": "ffsl",
          "funcAstName": "_ffsl",
          "qualType": "int (long)",
          "range": {
            "start": {
              "line": 85,
              "column": 6
            },
            "end": {
              "line": 85,
              "column": 10
            }
          }
        },
        {
          "funcName": "ffsll",
          "funcAstName": "_ffsll",
          "qualType": "int (long long)",
          "range": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 11
            }
          }
        },
        {
          "funcName": "fls",
          "funcAstName": "_fls",
          "qualType": "int (int)",
          "range": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 87,
              "column": 9
            }
          }
        },
        {
          "funcName": "flsl",
          "funcAstName": "_flsl",
          "qualType": "int (long)",
          "range": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 10
            }
          }
        },
        {
          "funcName": "flsll",
          "funcAstName": "_flsll",
          "qualType": "int (long long)",
          "range": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 11
            }
          }
        }
      ],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/string.h"
      ]
    },
    {
      "name": "/clang++/usr/include/string.h",
      "lastAnalyzed": 1725057898836,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    },
    {
      "name": "/clang++/usr/include/c++/v1/string.h",
      "lastAnalyzed": 1725057898836,
      "classes": [
        {
          "name": "_PairT",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__16_PairTaSEOS0_",
              "qualType": "std::_PairT &(std::_PairT &&)",
              "range": {
                "start": {
                  "line": 369,
                  "column": 8
                },
                "end": {
                  "line": 369,
                  "column": 14
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__16_PairTaSERKS0_",
              "qualType": "std::_PairT &(const std::_PairT &) noexcept",
              "range": {
                "start": {
                  "line": 369,
                  "column": 8
                },
                "end": {
                  "line": 369,
                  "column": 14
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "hash",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "default_delete",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__114default_deleteI9TestClassEaSERKS2_",
              "qualType": "std::default_delete<TestClass> &(const std::default_delete<TestClass> &)",
              "range": {
                "start": {
                  "line": 53,
                  "column": 29
                },
                "end": {
                  "line": 53,
                  "column": 43
                }
              }
            },
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__114default_deleteI9TestClassEaSEOS2_",
              "qualType": "std::default_delete<TestClass> &(std::default_delete<TestClass> &&)",
              "range": {
                "start": {
                  "line": 53,
                  "column": 29
                },
                "end": {
                  "line": 53,
                  "column": 43
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator()",
              "funcAstName": "__ZNKSt3__114default_deleteI9TestClassEclB8ue170006EPS1_",
              "qualType": "void (TestClass *) const noexcept",
              "range": {
                "start": {
                  "line": 65,
                  "column": 64
                },
                "end": {
                  "line": 65,
                  "column": 72
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "_EnableIfConvertible",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [],
          "funcImpls": [],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        },
        {
          "name": "unique_ptr",
          "parentClasses": [],
          "classes": [],
          "funcDecls": [
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEEaSB8ue170006EOS4_",
              "qualType": "unique_ptr<TestClass> &(unique_ptr<TestClass> &&) noexcept",
              "range": {
                "start": {
                  "line": 233,
                  "column": 71
                },
                "end": {
                  "line": 233,
                  "column": 79
                }
              }
            },
            {
              "funcName": "operator=",
              "funcAstName": "__ZNSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEEaSB8ue170006EDn",
              "qualType": "unique_ptr<TestClass> &(nullptr_t) noexcept",
              "range": {
                "start": {
                  "line": 268,
                  "column": 71
                },
                "end": {
                  "line": 268,
                  "column": 79
                }
              }
            },
            {
              "funcName": "operator*",
              "funcAstName": "__ZNKSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEEdeB8ue170006Ev",
              "qualType": "__add_lvalue_reference_t<TestClass> () const",
              "range": {
                "start": {
                  "line": 273,
                  "column": 89
                },
                "end": {
                  "line": 273,
                  "column": 97
                }
              }
            },
            {
              "funcName": "get",
              "funcAstName": "__ZNKSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEE3getB8ue170006Ev",
              "qualType": "pointer () const noexcept",
              "range": {
                "start": {
                  "line": 279,
                  "column": 67
                },
                "end": {
                  "line": 279,
                  "column": 70
                }
              }
            },
            {
              "funcName": "get_deleter",
              "funcAstName": "__ZNSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEE11get_deleterB8ue170006Ev",
              "qualType": "deleter_type &() noexcept",
              "range": {
                "start": {
                  "line": 280,
                  "column": 73
                },
                "end": {
                  "line": 280,
                  "column": 84
                }
              }
            },
            {
              "funcName": "get_deleter",
              "funcAstName": "__ZNKSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEE11get_deleterB8ue170006Ev",
              "qualType": "const deleter_type &() const noexcept",
              "range": {
                "start": {
                  "line": 283,
                  "column": 79
                },
                "end": {
                  "line": 283,
                  "column": 90
                }
              }
            },
            {
              "funcName": "release",
              "funcAstName": "__ZNSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEE7releaseB8ue170006Ev",
              "qualType": "pointer () noexcept",
              "range": {
                "start": {
                  "line": 290,
                  "column": 67
                },
                "end": {
                  "line": 290,
                  "column": 74
                }
              }
            }
          ],
          "funcImpls": [
            {
              "funcName": "operator->",
              "funcAstName": "__ZNKSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEEptB8ue170006Ev",
              "qualType": "pointer () const noexcept",
              "range": {
                "start": {
                  "line": 276,
                  "column": 67
                },
                "end": {
                  "line": 276,
                  "column": 75
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            },
            {
              "funcName": "reset",
              "funcAstName": "__ZNSt3__110unique_ptrI9TestClassNS_14default_deleteIS1_EEE5resetB8ue170006EPS1_",
              "qualType": "void (pointer) noexcept",
              "range": {
                "start": {
                  "line": 296,
                  "column": 64
                },
                "end": {
                  "line": 296,
                  "column": 69
                }
              },
              "funcCalls": [],
              "virtualFuncCalls": []
            }
          ],
          "virtualFuncDecls": [],
          "virtualFuncImpls": []
        }
      ],
      "funcDecls": [],
      "funcImpls": [
        {
          "funcName": "strchr",
          "funcAstName": "__Z6strchrB8ue170006Ua9enable_ifIXLb1EEEPKci",
          "qualType": "const char *(const char *, int)",
          "range": {
            "start": {
              "line": 73,
              "column": 69
            },
            "end": {
              "line": 73,
              "column": 75
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strchr",
          "funcAstName": "__Z6strchrB8ue170006Ua9enable_ifIXLb1EEEPci",
          "qualType": "char *(char *, int)",
          "range": {
            "start": {
              "line": 76,
              "column": 63
            },
            "end": {
              "line": 76,
              "column": 69
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strpbrk",
          "funcAstName": "__Z7strpbrkB8ue170006Ua9enable_ifIXLb1EEEPKcS0_",
          "qualType": "const char *(const char *, const char *)",
          "range": {
            "start": {
              "line": 80,
              "column": 69
            },
            "end": {
              "line": 80,
              "column": 76
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strpbrk",
          "funcAstName": "__Z7strpbrkB8ue170006Ua9enable_ifIXLb1EEEPcPKc",
          "qualType": "char *(char *, const char *)",
          "range": {
            "start": {
              "line": 83,
              "column": 63
            },
            "end": {
              "line": 83,
              "column": 70
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strrchr",
          "funcAstName": "__Z7strrchrB8ue170006Ua9enable_ifIXLb1EEEPKci",
          "qualType": "const char *(const char *, int)",
          "range": {
            "start": {
              "line": 87,
              "column": 69
            },
            "end": {
              "line": 87,
              "column": 76
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strrchr",
          "funcAstName": "__Z7strrchrB8ue170006Ua9enable_ifIXLb1EEEPci",
          "qualType": "char *(char *, int)",
          "range": {
            "start": {
              "line": 90,
              "column": 63
            },
            "end": {
              "line": 90,
              "column": 70
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "memchr",
          "funcAstName": "__Z6memchrB8ue170006Ua9enable_ifIXLb1EEEPKvim",
          "qualType": "const void *(const void *, int, size_t)",
          "range": {
            "start": {
              "line": 94,
              "column": 69
            },
            "end": {
              "line": 94,
              "column": 75
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "memchr",
          "funcAstName": "__Z6memchrB8ue170006Ua9enable_ifIXLb1EEEPvim",
          "qualType": "void *(void *, int, size_t)",
          "range": {
            "start": {
              "line": 97,
              "column": 63
            },
            "end": {
              "line": 97,
              "column": 69
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strstr",
          "funcAstName": "__Z6strstrB8ue170006Ua9enable_ifIXLb1EEEPKcS0_",
          "qualType": "const char *(const char *, const char *)",
          "range": {
            "start": {
              "line": 101,
              "column": 69
            },
            "end": {
              "line": 101,
              "column": 75
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "strstr",
          "funcAstName": "__Z6strstrB8ue170006Ua9enable_ifIXLb1EEEPcPKc",
          "qualType": "char *(char *, const char *)",
          "range": {
            "start": {
              "line": 104,
              "column": 63
            },
            "end": {
              "line": 104,
              "column": 69
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__loadword",
          "funcAstName": "__ZNSt3__110__loadwordB8ue170006IjEET_PKv",
          "qualType": "unsigned int (const void *)",
          "range": {
            "start": {
              "line": 40,
              "column": 1
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "funcCalls": [
            {
              "funcName": "memcpy",
              "funcAstName": "_memcpy",
              "qualType": "void *(void *, const void *, size_t)",
              "range": {
                "start": {
                  "line": 42,
                  "column": -1
                },
                "end": {
                  "line": 42,
                  "column": 42
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__loadword",
          "funcAstName": "__ZNSt3__110__loadwordB8ue170006ImEET_PKv",
          "qualType": "unsigned long (const void *)",
          "range": {
            "start": {
              "line": 40,
              "column": 1
            },
            "end": {
              "line": 40,
              "column": 11
            }
          },
          "funcCalls": [
            {
              "funcName": "memcpy",
              "funcAstName": "_memcpy",
              "qualType": "void *(void *, const void *, size_t)",
              "range": {
                "start": {
                  "line": 42,
                  "column": -1
                },
                "end": {
                  "line": 42,
                  "column": 42
                }
              }
            }
          ],
          "virtualFuncCalls": []
        },
        {
          "funcName": "__hash_combine",
          "funcAstName": "__ZNSt3__114__hash_combineB8ue170006Emm",
          "qualType": "size_t (size_t, size_t) noexcept",
          "range": {
            "start": {
              "line": 375,
              "column": 15
            },
            "end": {
              "line": 375,
              "column": 29
            }
          },
          "funcCalls": [],
          "virtualFuncCalls": []
        }
      ],
      "virtualFuncImpls": [],
      "referencedFromFiles": [
        "/backendSuite/walkerTests/actualTests/simpleCppClasses/classUniquePointerCall/file.cpp",
        "/clang++/usr/include/c++/v1/cstring"
      ]
    },
    {
      "name": "/clang++/usr/include/c++/v1/cstring",
      "lastAnalyzed": 1725057898836,
      "classes": [],
      "funcDecls": [],
      "funcImpls": [],
      "virtualFuncImpls": [],
      "referencedFromFiles": []
    }
  ]
}